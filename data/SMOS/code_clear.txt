packag import import java.util.d class absenc implement class model absenc student author nicola pisanti version long serialversionuid = -8396513309450121449l int idabs int idus date dateabs integ idjustifi int academicyear absenc method return absenc return integ repres absenc int getidabs return idabs method set absenc param integ repres set void setidabs int pidabs this.idabs = pidabs method return student absenc return integ repres student int getidus return idus method set student absenc param integ repres set setidus int pidus this.idus = pidus method return date absenc return string repres date absenc date getdateabs return dateabs method set date absenc param string date set void setdateabs date pdateabs this.dateabs = pdateabs method return justif absenc return integ repres justif absenc absenc justifi integ getidjustifi return idjustifi method set justif absenc param integ repres justifi set void setidjustifi integ pidjustifi this.idjustifi = pidjustifi method return year absenc return integ repres year year began int return method set year absenc param integ repres year set void int pacademicyear = pacademicyear 
adaptorexcept /packag smos.storage.connectionmanagement.except import java.rmi.remoteexcept thrown problem occur run code class adaptorexcept extend remoteexcept long serialversionuid adaptorexcept adaptorexcept string pmessag pmessag + buildlabel param pmessag pparentexcept adaptorexcept string pmessag except pparentexcept pmessag + buildlabel pparentexcept pparentexcept adaptorexcept except pparentexcept buildlabel pparentexcept string buildlabel return 
packag import class use model class address implement long serialversionuid = -9194626030239503689l int idaddress string name class builder address return int getidaddress return idaddress set address id param pidaddress id set void setidaddress int pidaddress = pidaddress return name string getnam return name set address name pname name set void setnam string pname = pname 
packag import class classroom implement class use model class author nicola pisanti version long serialversionuid = -8295647317972301446l int idclassroom //class id int idaddress //address id string name //class name int academicyear year class includ year classroom this.idaddress=0 this.idclassroom=0 method return year return repres school year class int return method set year param year set void int pacademicyear = pacademicyear method get class address id return integ repres class address id int getidaddress return idaddress method set class address id param id set void setidaddress int pidaddress = pidaddress method return class id return integ repres class id int getidclassroom return idclassroom method set class id param id set void setidclassroom int pidclassroom this.idclassroom = pidclassroom method return class name return string repres class name string getnam return name method set class name param name set void setnam string pname = pname string tostr return name + academicyear+ id + idclassroom 
packag smos.except import java.lang.except class repres except gener get connect databas class connectionexcept extend except long serialversionuid = -6593436034986073011l gener except associ error messag connectionexcept connect databas gener except associ error messag pmessag error messag associ connectionexcept string pmessag pmessag 
connectionpooldatasourc /packag smos.storage.connectionmanag import smos.storage.connectionmanagement.exception.notimplementedyetexcept import java.io.printwrit import java.sql.connect import java.sql.driv import java.sql.drivermanag import java.sql.sqlexcept import java.util.list import java.util.properti import java.util.vector import javax.sql.datasourc realiz connect pool implement java interfac sql datasourc pool monitor connect pool i.e releas memori releas time connect pool repres paramet class connectionpoolclosetimeout inactivemaxtimeout valu well other relat pool default valu file properti connection.properti class connectionpooldatasourc implement datasourc thread connectionpooldatasourc class establish connectionpoolclosetimeout millisecond releas connect pool class connectionclos extend thread connectionactiontimestamp int connectionpoolclosetimeout timestamp builder set releas time pool connect author di giorgio domenico cri malinconico param ptime time interv pool empti list connect connectionclos int ptime setnam connectionpoolclos ptime this.connectionpoolclosetimeout = ptime time connect gener event invoc getconnect releas timestamp set valu time use connectionev = system.currenttimemilli check connectionpoolclosetimeout millisecond connect close free memori void run work = work tri this.timestamp = system.currenttimemilli thread.sleep this.connectionpoolclosetimeout this.connectionactiontimestamp this.timestamp closeallconnect connectionpooldatasource.this.pool catch interruptedexcept work = e.printstacktrac catch sqlexcept work = e.printstacktrac list smosconnect = vector smosconnect properti config properti connectionclos connectionclos driver driver string fullconnectionstr inactivemaxtimeout int maxpools list connect pool = vector connect creat instanc connect pool param pjdbcdrivernam del driver jdbc param pfullconnectionstr databas connect string param puser databas administr param ppassword password pmaxpools administr number connect pool param ppooltim time interv pool empti time pool connect ms throw classnotfoundexcept jdbc driver found throw sqlexcept problem connect databas throw illegalargumentexcept input paramet connectionpooldatasourc string pjdbcdrivernam string pfullconnectionstr string puser string ppassword int pmaxpools int ppooltim throw classnotfoundexcept sqlexcept pmaxpools throw illegalargumentexcept maxpools pmaxpools pfullconnectionstr throw illegalargumentexcept fullconnectionstr null valu == throw illegalargumentexcept usernam null this.maxpools pmaxpools this.fullconnectionstr pfullconnectionstr this.config.put user puser ppassword = this.config.put password ppassword class.fornam = drivermanager.getdriv pfullconnectionstr = connectionclos ppooltim this.connectioncloser.start return size list connect return size list connect int actives return this.active.s empti pool connect one run oper millisecond protect temp = time = system.currenttimemilli smosconnect adc = int count = count this.active.s count++ = smosconnect this.active.get count temp time adc.getlasttim temp = this.releas adc.getconnect close connect pool 're pool di giorgio domenico cri malinconico throw sqlexcept synchron closeallconnect throw sqlexcept closeallconnect this.pool closeallconnect close connect indic connect list author di giorgio domenico cri malinconico param pconnect list connect close throw sqlexcept connect synchron closeallconnect list pconnect throw sqlexcept pconnections.s connectionwrapp conn = connectionwrapp pconnections.remov conn.closewrappedconnect close pool connect pool list throw sqlexcept connect public synchron closeallpooledconnect throw sqlexcept closeallconnect this.pool method use getconnect creat connect pool list return connect databas synchron connect createnewconnect connect rawconn = tri = this.driver.connect this.fullconnectionstr connect conn = connectionwrapp rawconn smosconnect ac = smosconnect ac.setconnect conn ac.setlasttim system.currenttimemilli this.active.add return conn catch sqlexcept e system.out.println connect creation fail + connectionpooldatasourc + e return connect pool check done list pool connect avoid creation connect creat return connect databas except gener see javax.sql.datasourc getconnect throw sqlexcept problem occur connect databas includ fact limit connect reach synchron connect getconnect throw sqlexcept connect connect = getpooledconnect connect == this.active.s = this.maxpools throw sqlexcept connect pool limit this.maxpools connect = createnewconnect //system.out.println get connect active.s pool.siz return connect method param parg1 param parg2 return connect throw sqlexcept throw notimplementedyetexcept connect getconnect string parg1 string parg2 throw sqlexcept throw notimplementedyetexcept method implement return int throw sqlexcept throw notimplementedyetexcept int getlogintimeout throw sqlexcept throw notimplementedyetexcept method implement return printwrit throw sqlexcept throw notimplementedyetexcept printwrit getlogwrit throw sqlexcept throw notimplementedyetexcept return number connect return number connect int getmaxpools return this.maxpools method use getconnect determin list pool connect reus ppoolindex index pool connect list connect list synchron connect getpooledconnect int ppoolindex smosconnect = smosconnect connect connect = null this.pool.s connect = connect ppoolindex ac.setconnect connect ac.setlasttim system.currenttimemilli this.active.add ac return ac.getconnect return size pool connect list return size pool connect list int poolsiz return this.pool.s releas connect delet one insert pool reus pconnect connect return synchron void releas connect pconnect exist = int activeindex = pconnect = smosconnect = activeindex this.active.s exist = smosconnect this.active.get activeindex adc.equ pconnect this.active.remov adc adc.getconnect exist = activeindex++ this.connectioncloser.connectionev releas connect active.s + pool.siz set connect millisecond ptimeout connect life time void setactivedtimeout ptimeout this.inactivemaxtimeout = ptimeout rearrang connect run oper connect perform oper millisecond pconnect connect perform oper stay void setlasttim connect pconnect exist = int count = smosconnect adc = null count this.active.s exist = smosconnect this.active.get count count++ adc.equ pconnect system.currenttimemilli exist = method param parg0 throw sqlexcept throw notimplementedyetexcept void setlogintimeout int parg0 throw sqlexcept throw notimplementedyetexcept method param parg0 throw sqlexcept throw notimplementedyetexcept void setlogwrit printwrit parg0 throw sqlexcept throw notimplementedyetexcept convert object connectionpooldatasourc class string return string represent connect pool string tostr stringbuff buf = stringbuff buf.append buf.append .append this.maxpools buf.append activesize= .append actives buf.append poolsize= .append poolsiz buf.append fullconnectionstring= .append this.fullconnectionstr buf.append return buf.tostr 
connectionwrapp /packag smos.storage.connectionmanag import import java.sql.callablestat import java.sql.connect import java.sql.databasemetadata import java.sql.preparedstat import java.sql.sqlexcept import java.sql.sqlwarn import java.sql.savepoint import java.sql.stat import java.util.arraylist import java.util.map import java.util.logging.logg connectionwrapp class add method class connect set time oper connect made inform pool happen class connectionwrapp implement connect serializ long serialversionuid logger logger = logger .getlogg connectionwrapper.class.getnam connect connect connectionpooldatasourc manag arraylist statement statement = arraylist statement param pconnect param ppoolmanag connectionwrapp connect pconnect connectionpooldatasourc ppoolmanag this.connect = pconnect this.manag = ppoolmanag logger.fin creat connectionwrapp preparedstat cachepreparedstat preparedstat pprepst this.statements.add return pprepst statement cachestat statement pstatement this.statements.add return pstatement see clearwarn clearwarn throw sqlexcept this.connection.clearwarn see void throw sqlexcept closeandreleasestat this.manager.releas void closeandreleasestat throw sqlexcept int n = this.statements.s int i++ statement this.statements.get this.statements.clear close connect throw sqlexcept closewrappedconnect throw sqlexcept closeandreleasestat this.connection.isclos logger.fin close db connect this.getclass .getnam + + this.connection.clos see commit void commit throw sqlexcept this.connection.commit see statement createstat throw sqlexcept return cachestat this.connection.createstat see createstat int int statement createstat int presultsettyp int presultsetconcurr throw sqlexcept return cachestat this.connection.createstat presultsettyp presultsetconcurr see createstat int int int statement createstat int presultsettyp int presultsetconcurr int presultsethold throw sqlexcept return cachestat this.connection.createstat presultsettyp presultsetconcurr presultsethold close wrap connect protect final throw throwabl closewrappedconnect see getautocommit getautocommit throw sqlexcept return this.connection.getautocommit see getcatalog string getcatalog throw sqlexcept return this.connection.getcatalog see gethold int gethold throw sqlexcept return this.connection.gethold see java.sql.connect getmetadata databasemetadata getmetadata throw sqlexcept return this.connection.getmetadata see gettransactionisol int gettransactionisol throw sqlexcept return this.connection.gettransactionisol see java.sql.connect gettypemap suppresswarn map gettypemap throw sqlexcept return this.connection.gettypemap see getwarn sqlwarn getwarn throw sqlexcept return this.connection.getwarn see java.sql.connect isclos boolean isclos throw sqlexcept return this.connection.isclos see java.sql.connect boolean throw sqlexcept return see java.sql.connect java.lang.str string nativesql string sql throw sqlexcept return this.connection.nativesql sql see java.sql.connect preparecal java.lang.str callablestat preparecal string sql throw sqlexcept return this.connection.preparecal sql see java.sql.connect preparecal java.lang.str callablestat preparecal string pstatementsql int presultsettyp int presultsetconcurr throw sqlexcept return this.connection.preparecal pstatementsql presultsettyp presultsetconcurr see java.sql.connect preparecal java.lang.str int int int callablestat preparecal string pstatementsql int presultsettyp int presultsetconcurr int presultsethold throw sqlexcept return this.connection.preparecal pstatementsql presultsettyp presultsetconcurr presultsethold see preparestat java.lang.str preparedstat preparestat string pstatementsql throw sqlexcept return cachepreparedstat this.connect .preparestat pstatementsql see preparestat java.lang.str preparedstat preparestat string int pautogeneratedkey throw sqlexcept return cachepreparedstat this.connection.preparestat pstatementsql pautogeneratedkey see preparestat java.lang.str preparedstat preparestat string int presultsettyp int presultsetconcurr throw sqlexcept return cachepreparedstat this.connection.preparestat pstatementsql presultsettyp presultsetconcurr see preparestat java.lang.str int int int preparedstat preparestat string int presultsettyp int presultsetconcurr int presultsethold throw sqlexcept return cachepreparedstat this.connection.preparestat pstatementsql presultsettyp presultsetconcurr presultsethold see preparestat java.lang.str preparedstat preparestat string int columnindex throw sqlexcept return cachepreparedstat this.connection.preparestat pstatementsql columnindex see preparestat java.lang.str java.lang.str preparedstat preparestat string pstatementsql string pcolumnnam throw sqlexcept return cachepreparedstat this.connection.preparestat pstatementsql pcolumnnam see releasesavepoint java.sql.savepoint void releasesavepoint savepoint psavepoint throw sqlexcept this.connection.releasesavepoint psavepoint see rollback rollback throw sqlexcept this.connection.rollback see rollback void rollback savepoint psavepoint throw sqlexcept this.connection.rollback psavepoint see setautocommit void setautocommit pautocommit throw sqlexcept this.connection.getautocommit = pautocommit this.connection.setautocommit pautocommit see setcatalog java.lang.str void setcatalog string pcatalog throw sqlexcept this.connection.setcatalog pcatalog see sethold int void sethold int pholdabl throw sqlexcept this.connection.sethold pholdabl see java.sql.connect void boolean throw sqlexcept this.manager.setlasttim see setsavepoint savepoint setsavepoint throw sqlexcept return this.connection.setsavepoint see setsavepoint java.lang.str savepoint setsavepoint string pname throw sqlexcept return this.connection.setsavepoint pname see settransactionisol int void settransactionisol int plevel throw sqlexcept this.connection.settransactionisol plevel see java.sql.connect java.util.map see tostr string tostr return this.connection.tostr settypemap map string class arg0 throw sqlexcept todo auto-gener method stub 
packag import java.sql implement thread maintain connect databas mysql connect troubleshoot mysql autoreconnect class recal method releas connect perform oper time class controlconnect extend thread connectionpooldatasourc manag = null int waittimeout creat instanc thread author di giorgio domenico cri malinconico param pmanag pool run connect controlconnect connectionpooldatasourc pmanag controlconnection.manag = pmanag creat instanc thread param pmanag pool run connect param time connect mysql che scada valu less valu wait_timeout mysql controlconnect connectionpooldatasourc pmanag int ptime controlconnection.waittimeout = ptime controlconnection.manag = pmanag noth user keep connect mysql void run tri manager.actives this.setprior thread.max_prior this.setprior thread.norm_prior manager.actives tri manager.closeallpooledconnect connect con = con = manager.getconnect statement st = con.createstat st.executequeri show tabl manager.releas con break catch except system.out.println gener except controlconnect + e thread.sleep waittimeout thread.sleep waittimeout catch interruptedexcept system.out.println thread controlconnect abort + ex 
dbconnect /packag smos.storage.connectionmanag import smos.environ import smos.utility.util import java.sql import java.util import java.io class interfac connect pool creat connectionpooldatasourc object pool connect get configur paramet properti file connect properti class dbconnect int active_timeout string driver_mysql = string full_path_databas = controlconnect linker = connectionpooldatasourc manag = null int max_pool_s string password = int pool_timeout properti properti = string user_nam = int wait_timeout static initi block deal gener pool invoc getconnect method tri properti = properti file fileprop = file environment.getpoolpropertiespath fileprop.exist properties.load fileinputstream fileprop driver_mysql = properties.getproperti connection.jdbc.nam driver_mysql.equ driver_mysql = utility.getdrivermysql full_path_databas = properti .getproperti connection.jdbc.fullpath full_path_database.equ full_path_databas = utility.getfullpathdatabas user_nam = properties.getproperti connection.usernam user_name.equ user_nam = utility.getusernam password = properties.getproperti connection.password password.equ password = utility.getpassword tri max_pool_s = integer.parseint properti .getproperti connection.maxpools catch except max_pool_s = utility.getmaxpools tri wait_timeout = integer.parseint properti .getproperti connection.waittimeout catch except wait_timeout = utility.getwaittimeout tri active_timeout = integer.parseint properti .getproperti connection.activetimeout catch except active_timeout = utility.getactivetimeout tri pool_timeout = integer.parseint properti .getproperti connection.pooltimeout catch except pool_timeout = utility.getpooltimeout properti file exist load default valu driver_mysql = utility.getdrivermysql full_path_databas = utility.getfullpathdatabas user_nam = utility.getusernam password = utility.getpassword max_pool_s = utility.getmaxpools wait_timeout = utility.getwaittimeout active_timeout = utility.getactivetimeout pool_timeout = utility.getpooltimeout loadpool creat manag prepar connect pool catch except se vien generata precedenza driver_mysql = utility.getdrivermysql full_path_databas = utility.getfullpathdatabas user_nam = utility.getusernam password = utility.getpassword max_pool_s = wait_timeout = active_timeout = pool_timeout = loadpool // creat manag prepar connect pool return connect pool return connect connect getconnect tri return manager.getconnect catch sqlexcept e system.out.println except gener dbconnection.getconnect + e return null actual creation connect pool void loadpool tri manag = connectionpooldatasourc driver_mysql full_path_databas user_nam password max_pool_s pool_timeout manager.setactivedtimeout active_timeout linker = controlconnect manag wait_timeout linker.start catch except e system.out.println can creat pool + connect dbconnect + e return connect pool includ pool connect i.e reus pconnect connect void releaseconnect connect pconnect pconnect 
packag smos.except import java.lang.except class default except gener system class defaultexcept extend except long serialversionuid = -8985617134055655964l gener except associ error messag defaultexcept gener except associ error messag pmessag error messag associ defaultexcept string pmessag pmessag 
packag import import java.util.d class delay implement class model entri student author nicola pisanti version long serialversionuid int iddelay int idus date datedelay string timedelay int academicyear method return delay id return integ repres delay int getiddelay return iddelay method set delay id integ param repres set void setiddelay int piddelay this.iddelay = piddelay method return id student return integ repres student int getidus return idus method set student id delay param integ repres set setidus int pidus this.idus = pidus method return date delay return string repres date delay date getdatedelay return datedelay method set date delay param string repres date delay void setdatedelay date pdatedelay this.datedelay = pdatedelay method return student time entri return string repres time entri student string gettimedelay return timedelay.substr return this.timedelay method set time entri student param string repres time set void settimedelay string ptimedelay this.timedelay = ptimedelay method return year absenc return integ repres year year began int return method set year absenc param integ repres year set void int pacademicyear = pacademicyear 
packag smos.except class repres except gener attempt admin user databas class deleteadministratorexcept extend except long serialversionuid = -2081143475624381775l gener except associ error messag deleteadministratorexcept user select admin databas creat manag tri gener except associ error messag pmessag error messag associ deleteadministratorexcept string pmessag pmessag 
packag smos.except import java.lang.except class repres except gener attempt manag user databas class deletemanagerexcept extend except long serialversionuid = -6441256751177339494l gener except associ error messag deletemanagerexcept user select manag databas creat manag tri gener except associ error messag pmessag error messag associ deletemanagerexcept string pmessag pmessag 
packag smos.except import java.lang.except class repres except gener attempt entiti databas class duplicatedentityexcept extend except long serialversionuid gener except associ error messag duplicatedentityexcept duplic key repositori gener except associ error messag pmessag error messag associ duplicatedentityexcept string pmessag pmessag 
packag smos.except import java.lang.except class repres except gener entiti found class entitynotfoundexcept extend except long serialversionuid = -1236105333523133721l gener except associ error messag entitynotfoundexcept object found repositori gener except associ error messag pmessag error messag associ entitynotfoundexcept string pmessag pmessag 
packag class use contain environ variabl gesa class environ default messag string default_error_messag = error occur process request. br br string poolpropertiespath = return string getpoolpropertiespath return poolpropertiespath param void setpoolpropertiespath string poolpropertiespath environment.poolpropertiespath = poolpropertiespath 
packag import import java.util.d class justifi implement class model justifi absenc author nicola pisanti version long serialversionuid = -4726381877687167661l int idjustifi int idus date datejustifi int academicyear method return id return integ repres int getidjustifi return idjustifi method set justifi param integ repres set void setidjustifi int pidjustifi this.idjustifi = pidjustifi method return student justifi return integ repres student int getidus return idus method set student justifi param integ repres set setidus int pidus this.idus = pidus method return date absenc justifi return string repres date date getdatejustifi return datejustifi method set date absenc justifi string repres date set void setdatejustifi date pdatejustifi this.datejustifi = pdatejustifi method return year justifi return integ repres year year began int return method set year relat justif param integ repres year set void int pacademicyear = pacademicyear 
packag smos.except import java.lang.except class repres except gener enter incorrect password authent class loginexcept extend except long serialversionuid = -1213284697567763493l gener except associ error messag loginexcept login password incorrect invalid session gener except associ error messag pmessag error messag associ loginexcept string pmessag pmessag 
packag smos.util import java.io.unsupportedencodingexcept import java.util.properti import javax.mail import javax.mail.internet class mailutil void sendmail string psender string preceiv string psubject string ptext throw messagingexcept unsupportedencodingexcept creat email session properti prop = properti props.put mail.smtp.host utility.getserversmtp session session = session.getdefaultinst prop // creat messag send mimemessag messag = mimemessag session message.setsubject psubject ptext // ad sender recipi address internetaddress fromaddress = internetaddress psender internetaddress toaddress = internetaddress preceiv message.setfrom message.setrecipi message.recipienttype.to toaddress // send messag transport.send messag 
packag smos.storag import smos.bean.address import smos.bean.teach import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util import java.sql.resultset import java.sql.sqlexcept import java.util.collect import java.util.vector import java.sql.connect address manag class /public class manageraddress manageraddress instanc name address string table_address = address string table_address_has_teach = address_has_teach manageraddress super return instanc exist class return return instanc class synchron manageraddress getinst instanc manageraddress return instanc verifi exist address databas param paddress address check return address pass paramet exist throw mandatoryfieldexcept throw sqlexcept throw mandatoryfieldexcept throw connectionexcept throw connectionexcept throw sqlexcept synchron hasteach teach pteach address paddress throw sqlexcept entitynotfoundexcept connectionexcept invalidvalueexcept connect connect = boolean result = pteaching.getid = entitynotfoundexcept specifi teach tri = dbconnection.getconnect connect == throw connectionexcept // prepar sql string string select from managerteaching.table_address_teach + where id_teach utility.isnul pteaching.getid + id_address utility.isnul paddress.getidaddress // send queri databas resultset pr = utility.queryoper connect sql result = return result releas resourc dbconnection.releaseconnect connect boolean exist address paddress throw mandatoryfieldexcept connectionexcept sqlexcept result= connect connect = null paddress.getnam == throw mandatoryfieldexcept specificar il tri //we get connect databas connect= dbconnection.getconnect connect == throw connectionexcept string sql = select from + manageraddress.table_address + where name = + utility.isnul paddress.getnam resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect insert address address param address enter throw sqlexcept throw connectionexcept throw mandatoryfieldexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insert address paddress throw mandatoryfieldexcept connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri control paddress.getnam ==null throw mandatoryfieldexcept specifi name field = dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into + manageraddress.table_address + name valu + utility.isnul paddress.getnam + utility.executeoper connect sql paddress.setidaddress utility.getmaxvalu id_address manageraddress.table_address //releas resourc dbconnection.releaseconnect connect delet address address param address delet throw mandatoryfieldexcept throw entitynotfoundexcept throw sqlexcept throw connectionexcept throw invalidvalueexcept synchron address paddress throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri //manageraddress.getinst .addressondeletecascad paddress connect = dbconnection.getconnect //prepar sql string string delet from + manageraddress.table_address + where id_address = + utility.isnul paddress.getidaddress utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect synchron assignteachingasaddress address paddress teach pteach throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept duplicatedentityexcept connect connect = manageraddress manageraddress = manageraddress.getinst manageraddress.hasteach pteach paddress throw duplicatedentityexcept address associ teach tri //manageraddress.getinst .addressondeletecascad paddress connect = dbconnection.getconnect //prepar sql string string insert into manageraddress.table_address_has_teach + id_teach valu + utility.isnul paddress.getidaddress + utility.isnul pteaching.getid + utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect synchron removeteachingasaddress address paddress teach pteach throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = manageraddress manageraddress = manageraddress.getinst manageraddress.hasteach pteach paddress throw entitynotfoundexcept address contain teach remov tri //manageraddress.getinst .addressondeletecascad paddress connect = dbconnection.getconnect //prepar sql string string delet from + manageraddress.table_address_has_teach + where id_address= utility.isnul paddress.getidaddress + id_teach utility.isnul pteaching.getid utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect return address pass param address id request return id address pass paramet throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron getaddressid address paddress throw entitynotfoundexcept connectionexcept sqlexcept int result connect connect = tri == null throw entitynotfoundexcept ca find prepar sql string inform correspond id address pass paramet string tsql = select id_address from + manageraddress.table_address + where name = + utility.isnul paddress.getnam // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = trs.getint id_address return result dbconnection.releaseconnect connect return correspond id pass paramet param address return address associ id paramet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron address getaddressbyid int pidaddress throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept address result = null connect connect = tri entitynotfoundexcept could find // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // prepar sql string string = select from + manageraddress.table_address + where id_address = + utility.isnul pidaddress // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordfromr pr throw entitynotfoundexcept find return result //releas resourc dbconnection.releaseconnect connect return set address return collect address throw connectionexcept throw entitynotfoundexcept throw sqlexcept throw invalidvalueexcept synchron collect address getaddresslist throw connectionexcept entitynotfoundexcept sqlexcept invalidvalueexcept connect connect = collect address result = vector address tri = dbconnection.getconnect connect == throw connectionexcept //prepar sql string string select + manageraddress.table_address + order by id_address //send queri databas resultset tr = utility.queryoper connect sql result = this.loadrecordsfromr tr return result //releas resourc dbconnection.releaseconnect connect return name address correspond id pass paramet param address return return string contain address name throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron string getaddressnamebyid int pidaddress throw entitynotfoundexcept connectionexcept sqlexcept string result connect connect = tri // id provid return error code pidaddress = entitynotfoundexcept could find prepar sql string inform correspond user id pass paramet string tsql = select name from + manageraddress.table_address + where id_address = + utility.isnul pidaddress // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = trs.getstr name throw entitynotfoundexcept could find return result dbconnection.releaseconnect connect return collect id teach associ id pass paramet param address return collect int throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect integ getaddresstech int pidaddress throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect integ result connect connect = tri // id provid return error code pidaddress = entitynotfoundexcept could find prepar sql string inform correspond user id pass paramet string tsql = select id_teach from + manageraddress.table_address_has_teach + where id_address = + utility.isnul pidaddress // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadintegersfromr tr return result dbconnection.releaseconnect connect let record resultset address loadrecordfromr resultset pr throw sqlexcept invalidvalueexcept address = address address.setnam prs.getstr name address.setidaddress return address allow record resultset collect address loadrecordsfromr resultset pr throw sqlexcept invalidvalueexcept collect address result = vector address result.add loadrecordfromr pr return result collect integ loadintegersfromr resultset pr throw sqlexcept invalidvalueexcept collect integ result = vector integ prs.next result.add id_teach return result 
packag smos.storag import java.sql.connect import java.sql.resultset import java.sql.sqlexcept import java.util.collect import java.util.iter import java.util.vector import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class managerclassroom class manag class institut author nicola pisanti version managerclassroom instanc string table_classroom = classroom string table_address = address string table_teacher_has_classroom = teacher_has_classroom string table_student_has_classroom = student_has_classroom managerclassroom super return instanc exist class return class instanc synchron managerclassroom getinst instanc managerclassroom return instanc check input given class databas param class exist verifi return class databas throw mandatoryfieldexcept throw connectionexcept throw sqlexcept synchron exist classroom pclassroom throw mandatoryfieldexcept connectionexcept sqlexcept result = connect connect = null pclassroom.getnam == throw mandatoryfieldexcept specifi class name =1970 throw mandatoryfieldexcept specifi year pclassroom.getidaddress =0 throw mandatoryfieldexcept specifi address enter convert idaddress tri //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from + managerclassroom.table_classroom + where name = + utility.isnul pclassroom.getnam + = utility.isnul pclassroom.getacademicyear + and id_address = + utility.isnul pclassroom.getidaddress // send queri databas resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect insert class object databas param class enter databas throw mandatoryfieldexcept throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insert classroom pclassroom throw mandatoryfieldexcept connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri control field pclassroom.getnam == throw mandatoryfieldexcept specifi class name =1970 throw mandatoryfieldexcept specifi year pclassroom.getidaddress =0 throw mandatoryfieldexcept specifi address enter convert connect dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into managerclassroom.table_classroom + name valu + utility.isnul pclassroom.getidaddress + utility.isnul pclassroom.getnam + utility.isnul pclassroom.getacademicyear utility.executeoper connect sql pclassroom.setidclassroom utility.getmaxvalu id_classroom managerclassroom.table_classroom //releas resourc dbconnection.releaseconnect connect updat statist class param class updat statist id throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron classroom pclassroom throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect= tri pclassroom.getidclassroom =0 throw entitynotfoundexcept could find class == null throw mandatoryfieldexcept specifi class name =1970 throw mandatoryfieldexcept specifi year pclassroom.getidaddress =0 throw mandatoryfieldexcept specifi address enter convert //prepar sql string string sql= managerclassroom.table_classroom + set + = utility.isnul pclassroom.getidaddress + name utility.isnul pclassroom.getnam + = utility.isnul pclassroom.getacademicyear + where id_classroom = + utility.isnul pclassroom.getidclassroom //make connect send queri connect = dbconnection.getconnect connect==nul throw connectionexcept utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect delet class databas class delet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept throw invalidvalueexcept synchron classroom pclassroom throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri //manageruser.getinst .userondeletecascad puser connect = dbconnection.getconnect //prepar sql string string delet from + managerclassroom.table_classroom + where id_classroom = + utility.isnul pclassroom.getidclassroom utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect synchron collect classroom getclassroomsbystud user puser throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept mandatoryfieldexcept collect classroom result=nul connect connect = managerus managerus = manageruser.getinst tri // exist manageruser.exist puser throw entitynotfoundexcept user exist puser throw invalidvalueexcept user student prepar sql string inform correspond class int iduser=manageruser.getuserid puser string tsql = select + managerclassroom.table_classroom + managerclassroom.table_student_has_classroom + managerclassroom.table_classroom + where + managerclassroom.table_student_has_classroom + .id_us = + utility.isnul idus + managerclassroom.table_classroom + .id_classroom managerclassroom.table_student_has_classroom + .id_classroom // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadrecordsfromr tr result.isempti throw entitynotfoundexcept find class enter user return result dbconnection.releaseconnect connect return class past id param id search class return string repres class suppli id throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron classroom getclassroombyid int pid throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept classroom result=nul connect connect = tri // id provid return error code pid = entitynotfoundexcept find class prepar sql string inform correspond class id string tsql = select from + managerclassroom.table_classroom + where id_classroom = + utility.isnul pid // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadrecordfromr tr throw entitynotfoundexcept find return result dbconnection.releaseconnect connect return collect class year synchron collect classroom getclassroomsbyacademicyear int pacademicyear throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect classroom result=nul connect connect = tri // id provid return error code throw entitynotfoundexcept data troppo vecchia prepar sql string inform correspond class id string tsql = select from + managerclassroom.table_classroom + where accademic_year utility.isnul pacademicyear // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadrecordsfromr tr result.isempti throw entitynotfoundexcept find class date enter return result dbconnection.releaseconnect connect synchron collect integ getacademicyearlist throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect integ result=nul connect connect = tri prepar sql string inform correspond class id string tsql = select distinct accademic_year managerclassroom.table_classroom + order // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadintegersfromr tr result.isempti throw entitynotfoundexcept find class date enter return result dbconnection.releaseconnect connect classroom getclassroombyuseracademicyear user puser int pacademicyear throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept mandatoryfieldexcept classroom result = null classroom temp = null managerclassroom managerclassroom = managerclassroom.getinst collect classroom list = list = managerclassroom.getclassroomsbystud puser iter classroom = list.iter it.hasnext = it.next temp.getacademicyear result = temp break return result synchron collect classroom getclassroomsbyteacheracademicyear user puser int pacademicyear throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept mandatoryfieldexcept collect classroom result = null connect connect = int idus = puser.getid tri // id provid return error code throw entitynotfoundexcept data troppo vecchia prepar sql string inform string tsql = select distinct + managerclassroom.table_classroom + managerclassroom.table_classroom + managerclassroom.table_teacher_has_classroom + where + managerclassroom.table_classroom + .id_classroom = + managerclassroom.table_teacher_has_classroom + .id_classroom managerclassroom.table_classroom + = utility.isnul pacademicyear + managerclassroom.table_teacher_has_classroom + .id_us = + utility.isnul idus // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadrecordsfromr tr result.isempti throw entitynotfoundexcept find class year enter return result dbconnection.releaseconnect connect synchron collect classroom user puser throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept mandatoryfieldexcept collect classroom result=nul connect connect = managerus managerus = manageruser.getinst tri // exist manageruser.exist puser throw entitynotfoundexcept user exist puser throw invalidvalueexcept user student prepar sql string inform correspond class int iduser=manageruser.getuserid puser string tsql = select distinct + managerclassroom.table_classroom + managerclassroom.table_teacher_has_classroom + managerclassroom.table_classroom + where + managerclassroom.table_teacher_has_classroom + .id_us = + utility.isnul idus + managerclassroom.table_classroom + .id_classroom managerclassroom.table_teacher_has_classroom + .id_classroom // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadrecordsfromr tr result.isempti throw entitynotfoundexcept find class enter user return result dbconnection.releaseconnect connect read integ recod resultset param pr resultset return collect integ throw sqlexcept throw invalidvalueexcept collect integ loadintegersfromr resultset pr throw sqlexcept invalidvalueexcept collect integ result = vector integ prs.next result.add return result allow read record result set param result set extract classroom object throw sqlexcept throw invalidvalueexcept classroom loadrecordfromr resultset pr throw sqlexcept invalidvalueexcept classroom classroom = classroom classroom.setnam prs.getstr name classroom.setidclassroom prs.getint id_classroom classroom.setidaddress return classroom let multipl record result set param result set extract classroom object throw sqlexcept throw invalidvalueexcept collect classroom loadrecordsfromr resultset pr throw sqlexcept invalidvalueexcept collect classroom result = vector classroom prs.next result.add loadrecordfromr pr return result 
packag smos.storag import java.sql.connect import java.sql.resultset import java.sql.sqlexcept import java.util.collect import java.util.d import java.util.vector import smos.bean.abs import smos.bean.delay import smos.bean.justifi import smos.bean.not import smos.bean.registerlin import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class managerregist class manag digit registri author nicola pisanti version managerregist instanc static string table_absence= absenc static string table_delay= delay static string table_justify= justifi static string table_note= note managerregist super return instanc exist class return return instanc class synchron managerregist getinst instanc managerregist return instanc check input given class databas param pabsenc class exist verifi return class databas throw connectionexcept throw sqlexcept synchron exist absenc pabsenc throw connectionexcept sqlexcept result = connect connect = tri //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from managerregister.table_abs + where id_abs = + utility.isnul pabsence.getidabs // send queri databas resultset tr = utility.queryoper connect sql trs.next result = return result dbconnection.releaseconnect connect check input given class databas param pdelay class exist verifi return class databas throw connectionexcept throw sqlexcept synchron exist delay pdelay throw connectionexcept sqlexcept result = connect connect = tri //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from managerregister.table_abs + where id_delay = utility.isnul pdelay.getiddelay // send queri databas resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect check input given class databas param pdelay class exist verifi return class databas throw connectionexcept throw sqlexcept synchron exist justifi pjustifi throw connectionexcept sqlexcept result = connect connect = tri //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from + managerregister.table_justifi + where id_justifi = + utility.isnul pjustify.getidjustifi // send queri databas resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect insert absenc databas param pabsenc type absenc enter databas throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron insertabs absenc pabsenc throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri = dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into managerregister.table_abs + id_us date_abs id_justifi valu + utility.isnul pabsence.getidus + utility.isnul pabsence.getdateabs + utility.isnul pabsence.getidjustifi utility.isnul pabsence.getacademicyear utility.executeoper connect sql pabsence.setidabs utility.getmaxvalu id_abs managerregister.table_abs //releas resourc dbconnection.releaseconnect connect insert delay databas param pdelay delay object databas throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insertdelay delay pdelay throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri = dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into managerregister.table_delay + id_us date_delay time_delay valu + utility.isnul pdelay.getidus + utility.isnul pdelay.getdatedelay + utility.isnul pdelay.gettimedelay + utility.isnul pdelay.getacademicyear utility.executeoper connect sql pdelay.setiddelay utility.getmaxvalu id_delay managerregister.table_delay sql string dbconnection.releaseconnect connect prepar sql string pnote object type note databas throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron insertnot note pnote throw mandatoryfieldexcept connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri pnote.getdescript == null || pnote.getdescript .equal throw mandatoryfieldexcept type note databas == || pnote.getteach .equal throw mandatoryfieldexcept insert teacher connect = dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into managerregister.table_not + date_not descript teacher valu + utility.isnul pnote.getidus + utility.isnul pnote.getdatenot + utility.isnul pnote.getdescript + utility.isnul + utility.isnul pnote.getacademicyear utility.executeoper connect pnote.setidnot utility.getmaxvalu id_not managerregister.table_not //releas resourc dbconnection.releaseconnect connect insert justif databas param pjustifi object type justifi enter databas param pabsenc type absenc repres absenc throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insertjustifi justifi pjustifi absenc pabsenc throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect= tri = dbconnection.getconnect connect==nul throw connectionexcept //prepar sql string string = insert into + managerregister.table_justifi + id_us date_justifi valu + utility.isnul pjustify.getidus + utility.isnul pjustify.getdatejustifi utility.isnul pjustify.getacademicyear utility.executeoper connect sql pjustify.setidjustifi utility.getmaxvalu id_justifi managerregister.table_justifi pabsence.setidjustifi this.updateabs pabsenc sql string dbconnection.releaseconnect connect delet absenc databas param pabsenc absenc delet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron deleteabs absenc pabsenc throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri = dbconnection.getconnect //prepar sql string string delet from managerregister.table_abs + where id_abs = + utility.isnul pabsence.getidabs utility.executeoper connect sql pabsence.getidjustifi ==null deletejustifi pabsence.getidjustifi //releas resourc dbconnection.releaseconnect connect delet delay databas param pdelay delay cancel throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void deletedelay delay pdelay throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri = dbconnection.getconnect //prepar sql string string delet from + managerregister.table_delay + where id_delay = utility.isnul pdelay.getiddelay utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect delet note databas param pnote note delet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron deletenot note pnote throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect = tri = dbconnection.getconnect //prepar sql string string delet from + managerregister.table_not + where id_not = + utility.isnul pnote.getidnot utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect delet note databas param pjidustifi id note delet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void deletejustifi int pidjustifi throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri = dbconnection.getconnect //prepar sql string string delet from + managerregister.table_justifi + where id_justifi = + utility.isnul pidjustifi utility.executeoper connect sql tri absenc temp= getabsencebyidjustifi pidjustifi updateabs temp catch except e normal except gener delet justif absenc cancel //releas resourc dbconnection.releaseconnect connect updat statist absenc param pabsenc absenc updat statist id throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron updateabs absenc pabsenc throw connectionexcept sqlexcept entitynotfoundexcept connect connect= tri sql string string sql= managerregister.table_abs + set + id_us = utility.isnul pabsence.getidus + date_abs = utility.isnul pabsence.getdateabs + id_justifi utility.isnul pabsence.getidjustifi + = utility.isnul pabsence.getacademicyear + where id_abs = + utility.isnul pabsence.getidabs //make connect send queri connect = dbconnection.getconnect connect==nul throw connectionexcept utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect updat statist delay pdelay delay updat statist id throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron void updatedelay delay pdelay throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect= tri sql string string sql= managerregister.table_delay + set + id_us = utility.isnul pdelay.getidus + date_delay utility.isnul pdelay.getdatedelay + time_delay utility.isnul pdelay.gettimedelay + = utility.isnul pdelay.getacademicyear + where id_delay = utility.isnul pdelay.getiddelay //make connect send queri connect = dbconnection.getconnect connect==nul throw connectionexcept utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect method statist note pnote object type note updat statist id throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron note pnote throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect= tri pnote.getdescript == null || pnote.getdescript .equal throw mandatoryfieldexcept insert note text == || pnote.getteach .equal throw mandatoryfieldexcept insert teacher //prepar sql string string sql= managerregister.table_not + set + id_us = utility.isnul pnote.getidus + date_not utility.isnul pnote.getdatenot + descript = utility.isnul pnote.getdescript + utility.isnul pnote.getteach + = utility.isnul pnote.getacademicyear + where id_not = + utility.isnul pnote.getidnot //make connect send queri connect = dbconnection.getconnect connect==nul throw connectionexcept utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect updat statist justifi pjustifi justifi statist id throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron void justifi pjustifi throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect= tri sql string string sql= managerregister.table_justifi + set + id_us = utility.isnul pjustify.getidus + date_justifi utility.isnul pjustify.getdatejustifi + = utility.isnul pjustify.getacademicyear + where id_justifi = + utility.isnul pjustify.getidjustifi //make connect send queri connect = dbconnection.getconnect connect==nul throw connectionexcept utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect method return note given note param pidjustifi integ repres note return note object repres note throw invalidvalueexcept throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron note getnotebyid int pidnot throw invalidvalueexcept entitynotfoundexcept connectionexcept sqlexcept note result=nul connect connect = tri // id provid return error code pidnot =0 throw entitynotfoundexcept find note prepar sql string inform correspond class id string tsql = select from + managerregister.table_not + where id_not = + utility.isnul pidnot // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadnotefromr tr throw entitynotfoundexcept find return result dbconnection.releaseconnect connect method return given justifca associ absenc param pidjustifi integ repres justifi return object absenc repres absenc throw invalidvalueexcept throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron absenc getabsencebyidjustifi int pidjustifi throw invalidvalueexcept entitynotfoundexcept connectionexcept sqlexcept absenc result=nul connect connect = tri // id provid return error code pidjustifi =0 throw entitynotfoundexcept find absenc prepar sql string inform correspond class id string tsql = select from managerregister.table_abs + where id_justifi = + utility.isnul pidjustifi // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadabsencefromr tr throw entitynotfoundexcept find absenc return result dbconnection.releaseconnect connect method return given param pidabs integ repres absenc return object absenc repres absenc throw invalidvalueexcept throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron absenc getabsencebyidabs int pidabs throw invalidvalueexcept entitynotfoundexcept connectionexcept sqlexcept absenc result=nul connect connect = tri // id provid return error code pidabs =0 throw entitynotfoundexcept find absenc prepar sql string inform correspond class id string tsql = select from managerregister.table_abs + where id_abs = + utility.isnul pidabs // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadabsencefromr tr throw entitynotfoundexcept find absenc return result dbconnection.releaseconnect connect method return delay given param piddelay integ repres delay return delay object repres delay throw invalidvalueexcept throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron delay getdelaybyid int piddelay throw invalidvalueexcept entitynotfoundexcept connectionexcept sqlexcept delay result=nul connect connect = tri // id provid return error code piddelay =0 throw entitynotfoundexcept find ritardo prepar sql string inform correspond class id string tsql = select from + managerregister.table_delay + where id_delay = utility.isnul piddelay // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loaddelayfromr tr throw entitynotfoundexcept find absenc return result dbconnection.releaseconnect connect method return given param pidabs integ repres absenc return object absenc repres absenc throw invalidvalueexcept throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron justifi getjustifybyidjustifi int pidjustifi throw invalidvalueexcept entitynotfoundexcept connectionexcept sqlexcept justifi result=nul connect connect = tri // id provid return error code pidjustifi =0 throw entitynotfoundexcept find justif prepar sql string inform correspond class id string tsql = select from + managerregister.table_justifi + where id_justifi = + utility.isnul pidjustifi // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result= this.loadjustifyfromr tr throw entitynotfoundexcept find justif return result dbconnection.releaseconnect connect method return absenc given input assign justif param pabsenc absenc valu object check justifi return absenc justifi throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron hasjustifi absenc pabsenc throw entitynotfoundexcept connectionexcept sqlexcept exist pabsenc throw entitynotfoundexcept absenc databas return return method return justif link given absenc param pabsenc type absenc repres absenc return object type justifi absenc justifi throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron justifi getjustifybyabs absenc pabsenc throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept exist pabsenc throw entitynotfoundexcept absenc databas return justifi result=nul connect connect = tri prepar sql string inform correspond class id string tsql = select from + managerregister.table_justifi + where id_justifi = + utility.isnul pabsence.getidjustifi //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = this.loadjustifyfromr tr throw entitynotfoundexcept find justif return result dbconnection.releaseconnect connect method return absenc taken given school year user input param pidus integ repres param repres year return collect absenc empti absenc throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect absenc int pidus int pacademicyear throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect absenc result=new vector absenc connect connect = tri // id provid return error code throw entitynotfoundexcept date // idem pidus =0 throw entitynotfoundexcept user found prepar sql string inform correspond class id string tsql = select from managerregister.table_abs + where accademic_year utility.isnul pacademicyear + and id_us = + utility.isnul pidus // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result.add loadabsencefromr tr return result dbconnection.releaseconnect connect method return collect note given given school year pidus integ repres param repres year return collect note empti receiv throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect note getnotebyiduserandacademicyear int pidus int pacademicyear throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect note result=new vector note connect connect = tri id provid return error code throw entitynotfoundexcept too date idem id pidus =0 throw entitynotfoundexcept user found prepar sql string inform correspond class id string tsql = select from + managerregister.table_not + where accademic_year utility.isnul pacademicyear + and id_us = + utility.isnul pidus //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result.add loadnotefromr tr return result dbconnection.releaseconnect connect method return given student given day param pidus integ repres student id param pdate string repres date databas return oggetto di tipo absenc oppur null se lo student era present throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron absenc getabsencebyiduserandd int pidus date pdate throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept absenc result=new absenc connect connect = tri //todo string format control // idem id pidus =0 throw entitynotfoundexcept user found prepar sql string inform correspond class id string tsql = select from managerregister.table_abs + where date_abs = + utility.isnul pdate + and id_us = + utility.isnul pidus // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result=loadabsencefromr tr result=nul return result dbconnection.releaseconnect connect method return delay given given day param pidus integ repres student id param pdate string repres date databas return delay object student time throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron delay getdelaybyiduserandd int pidus date pdate throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept delay result=new delay connect connect = tri string format control // idem id pidus =0 throw entitynotfoundexcept user found prepar sql string inform correspond class id string tsql = select from + managerregister.table_delay + where date_delay = utility.isnul pdate + and id_us = + utility.isnul pidus // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result=loaddelayfromr tr result=nul return result dbconnection.releaseconnect connect synchron collect registerlin getregisterbyclassidandd int pclassid date pdate throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect registerlin result = vector registerlin managerus mg = manageruser.getinst collect userlistitem student = pclassid userlistitem x student registerlin temp = registerlin temp.setstud x temp.setabs this.getabsencebyiduserandd x.getid pdate temp.setdelay this.getdelaybyiduserandd x.getid pdate result.add temp return result method check absenc registri line param pregisterlin object registerlin return absenc log line boolean hasabs registerlin pregisterlin pregisterline.getabs ==null return return method check delay log line param pregisterlin object registerlin return delay line boolean hasdelay registerlin pregisterlin pregisterline.getdelay return return allow read record result set param pr result set absenc object throw sqlexcept throw invalidvalueexcept absenc loadabsencefromr resultset pr throw sqlexcept invalidvalueexcept absenc = absenc absence.setidabs prs.getint id_abs absence.setidus prs.getint id_us absence.setdateabs date prs.getdat date_abs absence.setidjustifi id_justifi return absenc allow read record result set param pr result set extract justifi object throw sqlexcept throw invalidvalueexcept justifi loadjustifyfromr resultset pr throw sqlexcept invalidvalueexcept justifi justifi = justifi justify.setidjustifi prs.getint id_justifi justify.setidus prs.getint id_us justify.setdatejustifi date prs.getdat date_justifi return justifi allow read record result set param pr result set note object throw sqlexcept throw invalidvalueexcept note loadnotefromr resultset pr throw sqlexcept invalidvalueexcept note note note.setidnot prs.getint id_not prs.getint id_us note.setdatenot date prs.getdat date_not note.setdescript prs.getstr descript prs.getstr teacher return note allow read record result set param pr result set delay object throw sqlexcept throw invalidvalueexcept delay loaddelayfromr resultset pr throw sqlexcept invalidvalueexcept delay delay = delay delay.setiddelay prs.getint id_delay delay.setidus prs.getint id_us delay.setdatedelay date prs.getdat date_delay delay.settimedelay prs.getstr time_delay return delay 
packag smos.storag import smos.bean.teach import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util import java.sql.resultset import java.sql.sqlexcept import java.util.collect import java.util.vector import java.sql.connect teach manag class author giulio d'amora version ï¿½ copyright smo /public class managerteach managerteach instanc name teach string table_teach = teach name shape associ address teach string table_address_teach = address_has_teach name model associ user teach string table_teacher_classroom = teacher_has_classroom class builder managerteach super instanc exist teach return return return instanc class synchron managerteach getinst instanc == instanc managerteach return instanc verifi exist teach databas param pteach teach control return return past teach paramet throw mandatoryfieldexcept throw sqlexcept throw connectionexcept synchron exist teach pteach throw mandatoryfieldexcept connectionexcept sqlexcept result = connect connect = null pteaching.getnam == throw mandatoryfieldexcept specifi name tri get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from + managerteaching.table_teach + where name = + utility.isnul pteaching.getnam // send queri databas resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect insert teach teach param pteach teach includ throw sqlexcept throw connectionexcept throw mandatoryfieldexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insert teach pteach throw mandatoryfieldexcept connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect = tri control field pteaching.getnam == throw mandatoryfieldexcept specifi name field = dbconnection.getconnect connect == throw connectionexcept // prepar sql string string insert into managerteaching.table_teach + name valu + utility.isnul pteaching.getnam + utility.executeoper connect sql pteaching.setid utility.getmaxvalu id_teach managerteaching.table_teach // releas resourc dbconnection.releaseconnect connect updat teach teach param pteach teach modifi throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron void updat teach pteach throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect = tri entitynotfoundexcept ca find teach == null throw mandatoryfieldexcept specifi name field prepar sql string string managerteaching.table_teach + set + = + utility.isnul pteaching.getnam + where id_teach utility.isnul pteaching.getid // make connect send queri connect = dbconnection.getconnect connect == throw connectionexcept utility.executeoper connect sql // releas resourc dbconnection.releaseconnect connect delet teach teach param pteach teach elimin throw mandatoryfieldexcept throw entitynotfoundexcept throw sqlexcept throw connectionexcept throw invalidvalueexcept synchron delet teach pteach throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri managerteaching.getinst .teachingondeletecascad pteach connect = dbconnection.getconnect // prepar sql string string delet from + managerteaching.table_teach + where id_teach utility.isnul pteaching.getid utility.executeoper connect sql //releas resourc dbconnection.releaseconnect connect return past teach paramet param pteach teach id requir return return id teach paramet throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron int getteachingid teach pteach throw entitynotfoundexcept connectionexcept sqlexcept int result connect connect = tri pteach == null throw entitynotfoundexcept find teach prepar sql string inform correspond id teach pass paramet string select id_teach from + managerteaching.table_teach + where name = + utility.isnul pteaching.getnam // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset tr = utility.queryoper connect tsql result = trs.getint id_teach return result dbconnection.releaseconnect connect return name teach correspond id paramet param pid teach return return string contain name teach throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron string getteachingnamebyid int pid throw entitynotfoundexcept connectionexcept sqlexcept string result connect connect = tri // id provid return error code pid = entitynotfoundexcept ca find teach prepar sql string inform correspond id teach paramet string select name from + managerteaching.table_teach + where id_teach utility.isnul pid // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset tr = utility.queryoper connect tsql result = trs.getstr name throw entitynotfoundexcept ca find teach return result dbconnection.releaseconnect connect return instruct correspond id paramet param pid teach id returnreturn teach associ id paramet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron teach getteachingbyid int pid throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept teach result = null connect connect = tri pid entitynotfoundexcept find teach get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //prepar sql string string select from + managerteaching.table_teach + where id_teach utility.isnul pid // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordfromr pr throw entitynotfoundexcept find teach return result //releas resourc dbconnection.releaseconnect connect return set teach databas return collect teach return throw connectionexcept throw sqlexcept throw invalidvalueexcept throw entitynotfoundexcept synchron collect teach getteach throw connectionexcept sqlexcept invalidvalueexcept entitynotfoundexcept collect teach result = null connect connect = tri prepar sql string string select from + managerteaching.table_teach + order by name get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect return set lesson associ correspond user id paramet param pid user id return a collect teach return throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect teach getteachingsbyuserid int pid throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect teach result = null connect connect = null pid = entitynotfoundexcept specifi user tri //prepar sql string string select + managerteaching.table_teach + managerteaching.table_teacher_classroom + managerteaching.table_teach + where + managerteaching.table_teacher_classroom + .id_teach managerteaching.table_teach + .id_teach managerteaching.table_teacher_classroom + .id_us = + utility.isnul pid + + order by name // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect return set teach teacher teach class param user id param pidclass class id return collect teach return throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect teach getteachingsbyuseridclassid int pidteach int pidclass throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect teach result = null connect connect = null pidteach = entitynotfoundexcept specifi user pidclass = entitynotfoundexcept class tri //prepar sql string string select distinct + managerteaching.table_teach + managerteaching.table_teacher_classroom + managerteaching.table_teach + where + managerteaching.table_teacher_classroom + .id_us = + utility.isnul pidteach + managerteaching.table_teacher_classroom + .id_teaching= + utility.isnul pidclass + and + managerteaching.table_teacher_classroom + .id_teach managerteaching.table_teach + .id_teach + order by name // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect check teach assign param pteach teach control return return teach teacher assign throw sqlexcept throw entitynotfoundexcept throw connectionexcept throw invalidvalueexcept synchron hasteach teach pteach throw sqlexcept entitynotfoundexcept connectionexcept invalidvalueexcept connect connect = boolean result = pteaching.getid = entitynotfoundexcept specifi teach tri = dbconnection.getconnect connect == throw connectionexcept //prepar sql string string select from + managerteaching.table_teacher_classroom + where id_teach utility.isnul pteaching.getid //send queri databas resultset pr = utility.queryoper connect sql result = return result releas resourc dbconnection.releaseconnect connect return set teach associ class param pid class id return a collect teach return throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect teach getteachingsbyclassroomid int pid throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect teach result = null connect connect = null pid entitynotfoundexcept class id tri prepar sql string string select + managerteaching.table_teach + managerclassroom.table_classroom + managerteaching.table_address_teach + managerteaching.table_teach + where + managerclassroom.table_classroom + .id_classroom = + utility.isnul pid + and + managerclassroom.table_classroom + .id_address = managerteaching.table_address_teach + .id_address managerteaching.table_teach + managerteaching.table_address_teach + .id_teach // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect return set teach associ class param name class name return collect teach return throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect teach getteachingsbyclassroomnam string name throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect teach result = null connect connect = null name == null || name == throw entitynotfoundexcept specifi name class tri prepar sql string string select + managerteaching.table_teach + managerclassroom.table_classroom + managerteaching.table_address_teach + managerteaching.table_teach + where + managerclassroom.table_classroom + .name = + utility.isnul name + and + managerclassroom.table_classroom + .id_address = managerteaching.table_address_teach + .id_address managerteaching.table_teach + managerteaching.table_address_teach + .id_teach // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect synchron collect teach getteachingsbyiduseridclassroom int puser int pclass throw sqlexcept entitynotfoundexcept connectionexcept invalidvalueexcept collect teach result = null connect connect = tri = dbconnection.getconnect connect == throw connectionexcept // prepar sql string teach teacher_has_classroom thc teach thc.id_us // thc.id_classroom = thc.id_teach = teaching.id_teach string sql = select distinct +managerteaching.table_teaching+ + manageruser.table_teacher_classroom + +managerteaching.table_teach + where + manageruser.table_teacher_classroom + .id_us = + utility.isnul puser + manageruser.table_teacher_classroom + .id_classroom= + utility.isnul pclass + and + manageruser.table_teacher_classroom + .id_teach = +managerteaching.table_teach + .id_teach send queri databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result //releas resourc dbconnection.releaseconnect connect let record resultset param pr result return return teach throw sqlexcept throw invalidvalueexcept teach loadrecordfromr resultset pr throw sqlexcept invalidvalueexcept teach teach teach teaching.setnam prs.getstr name teaching.setid prs.getint id_teach return teach allow read record resultset param pr result return collect teach read return throw sqlexcept throw invalidvalueexcept collect teach loadrecordsfromr resultset pr throw sqlexcept invalidvalueexcept collect teach result = vector teach result.add loadrecordfromr pr return result 
packag smos.storag import smos.bean.teach import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util import java.sql.resultset import java.sql.sqlexcept import java.util.collect import java.util.vector import java.sql.connect class vote manag author luigi colangelo version ï¿½ copyright smo /public class managervot managervot instanc name rate string table_vot = vote class builder managervot super instanc exist vote return return return class instanc synchron managervot instanc == instanc managervot return instanc check vote databas param pvote vote return return pass exist paramet throw mandatoryfieldexcept throw sqlexcept throw connectionexcept synchron exist vote pvote throw mandatoryfieldexcept connectionexcept sqlexcept result = connect connect = null pvotes.getid_vot mandatoryfieldexcept specifi id tri get connect databas connect = dbconnection.getconnect connect == throw connectionexcept string sql = select from + managervotes.table_vot + where id_vot utility.isnul pvotes.getid_vot send queri databas resultset tr = utility.queryoper connect sql result = return result dbconnection.releaseconnect connect insert vote vote param pvote vote insert throw sqlexcept throw connectionexcept throw mandatoryfieldexcept throw entitynotfoundexcept throw invalidvalueexcept synchron void insert vote pvote throw mandatoryfieldexcept connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept connect connect = tri = dbconnection.getconnect connect == throw connectionexcept //prepar sql string string insert into + managervotes.table_vot + id_us id_teach written laboratori accademicyear turn valu + utility.isnul pvotes.getid_us + + utility.isnul pvotes.getteach + + utility.isnul pvotes.getwritten + + utility.isnul + + utility.isnul pvotes.getlaboratori + + utility.isnul pvotes.getaccademicyear + + utility.isnul pvotes.getturn + utility.executeoper connect sql pvotes.setid_vot utility.getmaxvalu id_vot managervotes.table_vot // releas resourc dbconnection.releaseconnect connect updat vote vote param pvote vote chang throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw mandatoryfieldexcept synchron vote pvote throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept connect connect = tri pvotes.getid_vot entitynotfoundexcept find pvotes.getid_us = mandatoryfieldexcept specifi vote user pvotes.getteach mandatoryfieldexcept specifi teach vote pvotes.getaccademicyear = mandatoryfieldexcept specifi year pvotes.getturn mandatoryfieldexcept specifi semest //prepar sql string string managervotes.table_vot + set + id_us = utility.isnul pvotes.getid_us + + id_teaching= utility.isnul pvotes.getteach + + written= utility.isnul pvotes.getwritten + + utility.isnul pvotes.getor + + laboratory= utility.isnul pvotes.getlaboratori + + utility.isnul pvotes.getaccademicyear + + turn= utility.isnul pvotes.getturn + where id_vot utility.isnul pvotes.getid_vot // make connect send queri connect = dbconnection.getconnect connect == throw connectionexcept utility.executeoper connect sql // releas resourc dbconnection.releaseconnect connect check student pass paramet grade assign teach paramet year paramet quarter paramet param pteach teach control puserlistitem student check return return vote -1 throw sqlexcept throw entitynotfoundexcept throw connectionexcept throw invalidvalueexcept synchron int getidvot teach pteach int int turn userlistitem puser throw sqlexcept entitynotfoundexcept connectionexcept invalidvalueexcept connect connect = int result = -1 vote = pteaching.getid entitynotfoundexcept specifi teach puser.getid =0 throw entitynotfoundexcept specifi user tri = dbconnection.getconnect connect == throw connectionexcept //prepar sql string string select from + managervotes.table_vot + where id_teach utility.isnul pteaching.getid + and + managervotes.table_vot + .accademicyear= + utility.isnul academicyear + and + managervotes.table_vot + .turn= + utility.isnul turn managervotes.table_vot + .id_user= + utility.isnul puser.getid // send queri databas resultset pr = utility.queryoper connect sql prs.next = this.loadrecordfromr pr result =v.getid_vot return result releas resourc dbconnection.releaseconnect connect delet vote vote param pvote vote elimin throw mandatoryfieldexcept throw entitynotfoundexcept throw sqlexcept throw connectionexcept throw invalidvalueexcept synchron vote pvote throw connectionexcept sqlexcept entitynotfoundexcept mandatoryfieldexcept invalidvalueexcept connect connect = tri managerteaching.getinst .teachingondeletecascad pteach connect = dbconnection.getconnect // prepar sql string string delet from + managervotes.table_vot + where id_vot utility.isnul pvotes.getid_vot utility.executeoper connect sql dbconnection.releaseconnect connect return teach correspond id grade paramet param pid vote return return teach throw entitynotfoundexcept throw connectionexcept throw sqlexcept return instruct correspond id paramet param pid teach return return teach associ id paramet throw connectionexcept throw sqlexcept throw entitynotfoundexcept throw invalidvalueexcept synchron vote getvotesbyid pid throw connectionexcept sqlexcept entitynotfoundexcept invalidvalueexcept vote result = null connect connect = tri pid entitynotfoundexcept find get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // prepar sql string string select from + managervotes.table_vot + where id_vot utility.isnul pid // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordfromr pr throw entitynotfoundexcept ca find teach return result //releas resourc dbconnection.releaseconnect connect synchron string getteachingidbyvotesid int pid throw entitynotfoundexcept connectionexcept sqlexcept string result connect connect = tri // id provid return error code pid = entitynotfoundexcept find prepar sql string inform correspond id teach paramet string select id_teach from + managervotes.table_vot + where id_vot utility.isnul pid // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset tr = utility.queryoper connect tsql result = trs.getstr id_teach throw entitynotfoundexcept find return result dbconnection.releaseconnect connect return set vote databas return return collect vote throw connectionexcept throw sqlexcept throw invalidvalueexcept throw entitynotfoundexcept synchron collect vote getvot throw connectionexcept sqlexcept invalidvalueexcept entitynotfoundexcept collect vote result connect connect = tri prepar sql string string select from + managervotes.table_vot + order by id_vot //we get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result // releas resourc dbconnection.releaseconnect connect return set vote correspond id pass paramet param pid user id return return collect vote throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect vote getvotesbyuserid pid throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect vote result connect connect = null pid = entitynotfoundexcept specifi user tri prepar sql string string select + managervotes.table_vot + managervotes.table_vot + where + managervotes.table_vot + .id_us = + utility.isnul pid + + order by id_us // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result //releas resourc dbconnection.releaseconnect connect return set vote correspond id pass paramet param pid user id return return collect vote throw entitynotfoundexcept throw connectionexcept throw sqlexcept throw invalidvalueexcept synchron collect vote getvotesbyuseridyearturn int pid int pyear int pturn throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept collect vote result connect connect = null pid = entitynotfoundexcept specifi user tri prepar sql string string select + managervotes.table_vot + managervotes.table_vot + where + managervotes.table_vot + .id_us = + utility.isnul pid + managervotes.table_vot + = utility.isnul pyear + + .turn utility.isnul pturn + + order by id_us get connect databas connect = dbconnection.getconnect connect == throw connectionexcept //send queri databas resultset pr = utility.queryoper connect sql result = this.loadrecordsfromr pr return result //releas resourc dbconnection.releaseconnect connect synchron deletevotesbyuseridyearturn int pid int pyear int pturn throw entitynotfoundexcept connectionexcept sqlexcept invalidvalueexcept connect connect = pid = entitynotfoundexcept specificar l'utent tri prepar sql string string delet managervotes.table_votes+ managervotes.table_vot + where + managervotes.table_vot + .id_user= + utility.isnul pid + managervotes.table_vot + .accademicyear= + utility.isnul pyear + + utility.isnul pturn // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send queri databas utility.executeoper connect sql // releas resourc dbconnection.releaseconnect connect let record resultset param pr result return return read vote throw sqlexcept throw invalidvalueexcept vote loadrecordfromr resultset pr throw sqlexcept invalidvalueexcept vote vote vote votes.setid_vot id_vot votes.setid_us prs.getint id_us votes.setteach prs.getint id_teach votes.setwritten prs.getint written prs.getint votes.setlaboratori prs.getint laboratori accademicyear votes.setturn turn return vote allow read record resultset param pr result queri return return collect read teach throw sqlexcept throw invalidvalueexcept collect vote resultset pr throw sqlexcept invalidvalueexcept collect vote result vector vote result.add loadrecordfromr pr return result 
packag smos.except import java.lang.except class repres except gener attempt enter entiti specifi field class mandatoryfieldexcept extend except long serialversionuid = -4818814194670133466l gener except associ error messag mandatoryfieldexcept field miss gener except associ error messag pmessag error messag associ mandatoryfieldexcept string pmessag pmessag 
packag import import java.util.d class model note log author nicola pisanti version class note implement long serialversionuid int idnot int idus date datenot string descript string teacher int note method return note return integ repres note int getidnot return idnot method set note id param integ repres valu setidnot int pidnot = pidnot method return student receiv return id user receiv int getidus return idus method set student receiv param integ repres valu setidus int pidus this.idus = pidus method return string repres date note given return string repres date note date getdatenot return datenot method set string repres date note given string repres date setdatenot date pdatenot = pdatenot method return note return string repres string getdescript return descript method set descript note param string contain descript note void setdescript string pdescript this.descript = pdescript method return id gave return integ repres string getteach return teacher method set teacher gave note param teacher teacher set void setteach string this.teach = pteacher method return year return integ indic year lesson start int return medoto set year assign note param integ indic year lesson enter void int = academicyear 
notyetimplementedexcept /packag smos.storage.connectionmanagement.except except warn part code implement class notimplementedyetexcept extend runtimeexcept long serialversionuid notimplementedyetexcept notimplementedyetexcept string pmessag pmessag 
packag smos.except import java.lang.except class repres except gener tri perform oper permiss class permissionexcept extend except long serialversionuid gener except associ error messag permissionexcept permiss deni gener except associ error messag pmessag error messag associ permissionexcept string pmessag pmessag 
packag import class registerlin implement class model line author nicola pisanti version long serialversionuid = -6010085925185873838l userlistitem student absenc absenc delay delay registerlin delay=nul method return student log line return user object repres student userlistitem getstud return student method set student line user object repres student setstud userlistitem student = student method return student absenc log line return absenc object repres absenc student absenc getabs return absenc method set student absenc log line param object absenc set setabs absenc absenc this.abs = absenc method return student delay log line return delay object repres delay student arriv time delay getdelay return delay method set student delay log line param delay object set void setdelay delay delay this.delay = delay 
packag import java.util.arraylist import smos.exception.invalidvalueexcept class use report card author luigi colangelo version ï¿½ copyright smo /public class report arraylist vote class manufactur report arraylist vote method return vote index input array param pind rate return rate given index throw invalidvalueexcept vote getvot int pind throw invalidvalueexcept pind pind =pagella.s invalidvalueexcept indic non return pagella.get pind method add vote array param pvote vote throw invalidvalueexcept void addvot vote pvote throw invalidvalueexcept pvotes==nul throw invalidvalueexcept vote pagella.add pvote method vote array param pid index vote delet throw invalidvalueexcept void remov int pid throw invalidvalueexcept pid pid =pagella.s invalidvalueexcept index pagella.remov pid string tostr string pag= vote e pagella pag=pag+ \n +e.tostr return pag 
packag import class use model user role author bavota gabriel carniv filomena /public class role implement long serialversionuid id administr role int admin = id role int teacher = student role id int student = parent role int parent = role ata int ata = direct role int director = 
packag import smos.environ import smos.bean.address import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.manageraddress import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use teach teacher author giulio d'amora version ï¿½ copyright smo /public class servletaddremoveteachingsasaddress extend httpservlet long serialversionuid = -6692711286746163446l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./showaddresslist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst manageraddress manageraddress = manageraddress.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp // //i address id list address address = address session.getattribut address string = prequest.getparametervalu selectedteach string = prequest.getparametervalu unselectedteach int nselect int nunselect int temp //we select teach int i=0 nselect = integer.valueof idselectedlist manageraddress.hasteach temp address address managerteaching.getteachingbyid temp //remov teach int i=0 nunselect = integer.valueof idunselectedlist manageraddress.hasteach temp address address managerteaching.getteachingbyid temp teachinglistteach listselcect catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac catch mandatoryfieldexcept e todo auto-gener catch block e.printstacktrac catch duplicatedentityexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storag import smos.storage.connectionmanagement.exception.connectionexcept class servletaddressteach extend httpservlet servlet use display teach associ author vecchion giusepp long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerteach managerteach =managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp collect teach teachinglist = managerteaching.getteach session.setattribut teachinglist catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use teach teacher author giulio d'amora version ï¿½ copyright smo /public class servletaddteachingasteach extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst managerclassroom managerclass = managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp // //i need id class teach know int idteach = int user session.getattribut user .getid user teacher = manageruser.getuserbyid idteach int idclass = integer.valueof prequest.getparamet classid string = prequest.getparametervalu selectedteach int nteach int temp //collect teach listselcect = vector teach gotopag = int i=0 nteach = integer.valueof idteachinglist manageruser.hasteach temp managerclass.getclassroombyid idclass manageruser.assignteacheratclassroomteach idclass temp //listselcected.add managerteaching.getteachingbyid temp teachinglistteach listselcect catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept chang server password logged-in user author napolitano vincenzo /public class servletalterpersonald extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag showuserlist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user user = user session.getattribut loggedus user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp //verifi manageruser.existslogin user throw invalidvalueexcept la login inserita esist gia inserir una login prequest.getparamet pass //we manageruser.exist manageruser.upd user int userid = manageruser.getuserid user ==userid manageruser.upd user throw duplicatedentityexcept exist user catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.us import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept servlet modifi student record id father author napolitano vincenzo /public class servletassignparentstud extend httpservlet long serialversionuid = -4507225018030147979l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag showuserlist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus verifi log tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp user user = user session.getattribut user int idparent=user.getid collect userlistitem student = vector userlistitem iter userlistitem = null student manageruser.getstud string = prequest.getparametervalu string = prequest.getparametervalu selectedstud = int selectedlength = selectedstudent.length userlistitem tmp = user stu=nul int idstudent=0 int selectedlength i++ = students.iter string selectedstud idstudent=integer.parseint dd = userlistitem tmp.getid ==idstud tmp.getid //recupero manageruser.assignpar stu idpar gotopage= ./error.jsp = null int = unselectedstudent.length userlistitem tmp = user stu=nul int idstudent=0 int i++ = students.iter string idstudent=integer.parseint dd = userlistitem tmp.getid ==idstud tmp.getid //recupero manageruser.removepar stu user user catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import import smos.bean.us import smos.bean.userlistitem import smos.exception.deletemanagerexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use role author napolitano vincenzo /public class servletassignrol extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag showuserlist string errormessag httpsession session = prequest.getsess collect userlistitem administr = vector userlistitem iter userlistitem = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus //verifi user log tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp user user = user session.getattribut user administr = manageruser.getadministr itadmin administrators.iter string selectedrol = prequest.getparametervalu selectedrol string unselectedrol = prequest.getparametervalu unselectedrol selectedrol = selectedlength = selectedroles.length int selectedlength i++ role = integer.valueof selectedrol let see role 're assign role role.teach gotopage= ./loadyearforteach check role assign student role == role.stud manageruser.isstud user gotopage= ./showuserlist check role assign parent role==role.par manageruser.ispar user gotopage= ./persistentdatamanagement/usermanagement/showstudentparentform.jsp role = null unselectedlength = int i++ role = integer.valueof unselectedrol manageruser.isadministr role==role.admin throw deletemanagerexcept chang role administr system creat administr tri role user user catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch deletemanagerexcept deletemanagerexcept errormessag = environment.default_error_messag + deletemanagerexception.getmessag gotopag = deletemanagerexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import import smos.bean.us import smos.bean.userlistitem import smos.exception.deletemanagerexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletassignstudentclassroom extend httpservlet protect void doget httpservletrequest prequest httpservletrespons prespons string gotopag ./showuserlist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerclassroom managerclassroom = managerclassroom.getinst user loggedus = user session.getattribut loggedus verifi log tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp //select user user = user session.getattribut user //select year int = integer.valueof prequest .getparamet // id select class zero want //the associ int idclassroom = integer.valueof prequest.getparamet classid classroom = = managerclassroom.getclassroombyuseracademicyear = null manageruser.removestudentclassroom user p.getidclassroom idclassroom manageruser.assignstudentclassroom user idclassroom catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac catch mandatoryfieldexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.d import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletcomputatestatist extend httpservlet long serialversionuid definit doget method param prequest param prespons suppresswarn deprec protect void doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess integ academicyear = integer.valueof prequest.getparamet integ absencelimit = integer.valueof prequest.getparamet absencelimit integ notelimit = integer.valueof prequest.getparamet notelimit managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus collect user alertstudentabs = vector user date today = date int unjustifiedabs = collect user alertstudentnot = vector user int note = user tmpuser = tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access function gotopag ./error.jsp academicyear = collect integ academicyearlist = managerclassroom.getinst .getacademicyearlist unjustifiedabs = manageruser.gethighlightsstudentabs unjustifiedabs = int i=0 i++ absencelimit tmpuser = manageruser.getuserbyid alertstudentabsence.add tmpuser note manageruser.gethighlightsstudentnot note = int i=0 note.length i++ note = notelimit tmpuser = manageruser.getuserbyid note alertstudentnote.add tmpuser alertstudentabs alertstudentabs session.setattribut alertstudentnot alertstudentnot academicyearlist academicyearlist session.setattribut absencelimit absencelimit session.setattribut notelimit session.setattribut yearselect catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.address import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.manageraddress import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept servlet use address databas author vecchion giusepp /public class servletdeleteaddress extend httpservlet long serialversionuid = -7383336226678925533l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string errormessage= string gotopage= ./showaddresslist managerus manageruser= manageruser.getinst manageraddress manageraddress= manageraddress.getinst httpsession prequest.getsess user loggeduser= user session.getattribut address address= tri return manageruser.isadministr errormessage= access featur gotopage= ./error.jsp address session.getattribut address address catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletdeleteclassroom extend httpservlet servlet delet class author nicola pisanti version long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons int ac=0 string gotopag = academicyear= +ac string errormessag = httpsession session = prequest.getsess user loggedus = user session.getattribut loggedus managerus managerus = manageruser.getinst managerclassroom managerclassroom= managerclassroom.getinst // verifi user log tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp classroom classroom = classroom session.getattribut classroom ac=integer.valueof classroom.getacademicyear classroom gotopag = academicyear= +ac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch deletemanagerexcept deletemanagerexcept errormessag = environment.default_error_messag + deletemanagerexception.getmessag gotopag = deletemanagerexception.printstacktrac /catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.justifi import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletdeletejustifi extend httpservlet long serialversionuid = -7692034998093997864l protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess user loggedus = user session.getattribut loggedus string string session.getattribut idclassroom int id= integer.parseint idclassroom gotopage+= idclassroom= managerus managerus = manageruser.getinst managerregist mr= managerregister.getinst // verifi user log tri return manageruser.isadministr manageruser.isadministr errormessag = user access + function gotopag ./error.jsp justifi = justifi session.getattribut justifi mr.exist justifi mr.deletejustifi justify.getidjustifi errormessage= justifi exist gotopag ./error.jsp catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.not import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletdeletenot extend httpservlet long serialversionuid = -7968126163648714515l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus object managerregist managerregist = managerregister.getinst tri return manageruser.isadministr errormessag = user access + function gotopag = ./error.jsp //set thing pass session use session setattribut string attribut gotopage= ./shownotelist student= +session.getattribut note todelete= note session.getattribut note managerregister.deletenot gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.us import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept class servletdeletereport extend httpservlet servlet use display pupil associ class author giulio d'amora long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managervot managervot managervotes.getinst managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus int year= int turn=0 int studentid=0 tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error2.jsp userlistitem student = userlistitem session.getattribut student studentid = student.getid year= integ session.getattribut turn= integ session.getattribut q managervotes.deletevotesbyuseridyearturn year turn gotopag catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = year= +year+ turn= +turn+ idstudent= numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = year= +year+ turn= +turn+ idstudent= sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use teach author giulio d'amora version ï¿½ copyright smo /public class servletdeleteteach extend httpservlet long serialversionuid = -7133554709559970023l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./teachinglist string errormessag httpsession session = prequest.getsess user loggedus = user session.getattribut loggedus managerus managerus = manageruser.getinst teach teach teach session.getattribut teach managerteach managerteach managerteaching.getinst // verifi user log tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp teach catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.bean.userlistitem import smos.exception.deleteadministratorexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use author napolitano vincenzo /public class servletdeleteus extend httpservlet long serialversionuid = -7693860059069872995l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag showuserlist string errormessag httpsession session = prequest.getsess collect userlistitem manag = null iter userlistitem = user loggedus = user session.getattribut loggedus managerus managerus = manageruser.getinst //verifi user log tri return manageruser.isadministr manageruser.isadministr errormessag = user access + function gotopag ./error.jsp user user = user session.getattribut user //delet user administr manageruser.isadministr user user //check administr other manag = manageruser.getadministr = manager.iter user throw deleteadministratorexcept catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch deleteadministratorexcept deleteadministratorexcept errormessag = environment.default_error_messag + deleteadministratorexception.getmessag gotopag = deleteadministratorexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag smos.appl import javax.servlet.servletconfig import javax.servlet.servletexcept import javax.servlet.http.httpservlet import smos.utility.util servlet use initi system paramet author bavota gabriel carneval filomena /public class servletiniti extend httpservlet long serialversionuid = -2542143445249797492l suppresswarn servletconfig config initi paramet void servletconfig config throw servletexcept = config //set smtp server specifi configur file utility.setserversmtp config.getinitparamet serversmtp //set paramet need databas utility.setdrivermysql config.getinitparamet drivermysql utility.setfullpathdatabas config.getinitparamet fullpathdatabas utility.setusernam config.getinitparamet utility.setpassword config.getinitparamet password utility.setmaxpools integer.valueof config.getinitparamet maxpools integer.valueof config.getinitparamet waittimeout integer.valueof config.getinitparamet integer.valueof config.getinitparamet pooltimeout utility.settextfoot config.getinitparamet textfoot 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import javax.servlet.http.httpsess import import javax.servlet.http.httpservletrespons import smos.environ import smos.bean.us import smos.bean.address import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.manageraddress import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept servlet use enter address databas author vecchion giusepp /public class servletinsertaddress extend httpservlet long serialversionuid definit doget method param prequest param prespons void doget httpservletrequest prequest httpservletrespons prespons string gotopage= ./showaddresslist string errormessage= httpsession session = prequest.getsess managerus manageruser= manageruser.getinst manageraddress manageraddress= manageraddress.getinst user loggedus = user session.getattribut loggedus tri return manageruser.isadministr errormessage= access featur gotopage= ./error.jsp address address address.setnam prequest.getparamet name verifi address databas insert manageraddress.exist address throw duplicatedentityexcept exist address catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletinsertclassroom extend httpservlet servlet insert class author nicola pisanti version long serialversionuid definit doget method param prequest param prespons void doget httpservletrequest prequest httpservletrespons prespons int prequest.getparamet string gotopag academicyear= +ac string errormessag = httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerclassroom managerclassroom= managerclassroom.getinst user loggedus = user session.getattribut loggedus string ye tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp int int integer.valueof prequest.getparamet address classroom classroom= classroom classroom.setnam prequest.getparamet name ac classroom.setidaddress idadd throw invalidvalueexcept year enter managerclassroom.exist classroom classroom session.setattribut iswizard iswizard throw duplicatedentityexcept class exist databas catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.abs import smos.bean.justifi import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletinsertjustifi extend httpservlet long serialversionuid definit doget method param prequest param prespons void doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp managerregist managerregister.getinst justifi justify=new justifi justify.setacademicyear integer.parseint prequest.getparamet justify.setdatejustifi utility.string2d prequest.getparamet date justify.setidus integer.parseint prequest.getparamet idus string prequest.getparamet idabs int idabsence=integer.parseint ida //string = prequest.getparamet idclassroom //int idclassroom= integer.parseint idc //gotopage+=idclassroom absenc absenc = mr.getabsencebyidabs idabs mr.exist errormessag prensent nel db gotopag ./error.jsp //insert justifi mr.exist justifi mr.insertjustifi justifi absenc session.setattribut justifi justifi throw duplicatedentityexcept justifi exist catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.not import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletinsertnewnot extend httpservlet long serialversionuid = -6496360730201101300l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus object managerregist managerregist = managerregister.getinst tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp //set thing pass session use session.setattribut string attribut prequest.getparamet ==null user student = user session.getattribut student integer.valueof string prequest.getattribut student session.setattribut student student session.setattribut idstud student.getid gotopage= ./registermanagement/insertnewnote.jsp note note classroom session.getattribut classroom utility.string2d prequest.getparamet datenot integ session.getattribut prequest.getparamet nnote.setdescript prequest.getparamet notedescript tri managerregister.insertnot gotopage= ./shownotelist student= +session.getattribut idstud catch mandatoryfieldexcept session.setattribut error e.getmessag gotopage= ./registermanagement/insertnewnote.jsp gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use report card author giulio d'amora version copyright smo /public class servletinsertreport extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./showreport string errormessag httpsession session = prequest.getsess collect teach teachinglist = null managervot managervot managervotes.getinst managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp classroom classroom = classroom session.getattribut classroom teach list teachinglist = managerteaching.getteachingsbyclassroomid classroom .getidaddress iter teach itteach = teachinglist.iter integ year integ session.getattribut userlistitem student = userlistitem session .getattribut student month turn integ session.getattribut q teach = null int idtemp string lab gotopag += + student.getid + q= turn = itteaching.next idtemp = teachingtemp.getid scritto_ = + idtemp lab + idtemp write prequest.getparamet = prequest.getparamet lab = prequest.getparamet lab vote newvot vote int oralint=0 labint=0 write = writeint = integer.valueof = oralint = integer.valueof lab = labint = integer.valueof lab writeint || oralint = labint = year oralint newvotes.setteach turn writeint managervotes.insert newvot gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch mandatoryfieldexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use cours databas author giulio d'amora version copyright smo /public class servletinsertteach extend httpservlet long serialversionuid definit doget method param prequest param prespons void doget httpservletrequest prequest httpservletrespons prespons string gotopag ./teachinglist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus // string iswizard = tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp teach teach teach teaching.setnam prequest.getparamet name managerteaching.exist teach teach session.setattribut teach teach // session.setattribut iswizard iswizard throw duplicatedentityexcept exist teach catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.loginexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use databas author napolitano vincenzo /public class servletinsertus extend httpservlet long serialversionuid = -3860569607870099419l definit doget method param prequest param prespons void doget httpservletrequest prequest httpservletrespons prespons string gotopag ./showuserlist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp user user = user user.setfirstnam prequest.getparamet firstnam prequest.getparamet lastnam cell prequest.getparamet email verifi login string login = prequest.getparamet login login manageruser.existslogin user throw invalidvalueexcept login enter exist enter login prequest.getparamet password .equal prequest.getparamet password1 prequest.getparamet password throw loginexcept valu ââenter password match //user input manageruser.exist manageruser.insert user session.setattribut user user throw duplicatedentityexcept user exist catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch loginexcept loginexcept errormessag = environment.default_error_messag + loginexception.getmessag gotopag = loginexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view year author giulio d'amora version copyright smo /public class servletloadclassbyaccademicyear extend httpservlet long serialversionuid = -3988115259356084996l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./persistentdatamanag string errormessag httpsession session = prequest.getsess collect classroom classroomlist = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access function gotopag ./error.jsp //date = date // select year int selectedaccademicyear integer.valueof prequest.getparamet managerclassroom managerclassroom = managerclassroom.getinst //we calcul list class select year classroomlist = managerclassroom.getclassroomsbyacademicyear session.setattribut classroomlist classroomlist session.setattribut selectedclass gotopag += string session.getattribut goto gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use student report card author giulio d'amora version copyright smo /public class servletloadreport extend httpservlet long serialversionuid = -1045906657573424217l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect vote voteslist = collect teach teachinglist = null managervot managervot managervotes.getinst managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp classroom classroom = classroom session.getattribut classroom teach list teachinglist = managerteaching.getteachingsbyclassroomid classroom .getidaddress integ year integ session.getattribut month turn integ session.getattribut q userlistitem student = userlistitem session .getattribut student // vote list voteslist = managervotes.getvotesbyuseridyearturn year turn teachinglist teachinglist session.setattribut voteslist voteslist test data presponse.sendredirect gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use list cours associ student class author giulio d'amora version copyright smo /public class servletloadteachinglist extend httpservlet long serialversionuid = -708492643674363470l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect teach teachinglist = managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp classroom classroom = classroom session.getattribut classroom teach list teachinglist = managerteaching.getteachingsbyclassroomid classroom .getidaddress integ year integ session.getattribut month int turn integ session.getattribut q userlistitem student = userlistitem session .getattribut student session.setattribut teachinglist teachinglist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view year author giulio d'amora version copyright smo /public class servletloadyear extend httpservlet long serialversionuid = -6304881993204403909l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./persistentdatamanag string errormessag httpsession session = prequest.getsess collect integ yearlist = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access function gotopag ./error.jsp managerclassroom managerclassroom = managerclassroom.getinst yearlist = managerclassroom.getacademicyearlist gotopag += string prequest.getparamet goto session.setattribut accademicyearlist yearlist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.loginexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use author napolitano vincenzo /public class servletlogin extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess // get request string login = prequest.getparamet user string password = prequest.getparamet password user login tri managerus managerus = manageruser.getinst manageruser.getuserbylogin login = user = manageruser.login login password loggedus = session.setattribut loggedus throw loginexcept nome utent password errati manageruser.isadministr gotopage= ./homepage/homeadmin.jsp gotopage= ./homepage/homeprofessor.jsp loggedus gotopage= ./homepage/homestudent.jsp loggedus gotopage= ./homepage/homeparent.jsp gotopage= ./homepage/homeatapeople.jsp manageruser.isdirector gotopage= ./homepage/homedirector.jsp catch loginexcept loginexcept errormessag = environment.default_error_messag + loginexception.getmessag gotopag = loginexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import javax.servlet.servletexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons servlet use author napolitano vincenzo /public class servletlogout extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons throw servletexcept ioexcept prequest.getsess .invalid ./index.htm definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons throw servletexcept ioexcept prequest prespons 
packag import javax.servlet.http.httpservlet class servletprova extend httpservlet long serialversionuid = -832177625776300783l 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import import smos.bean.us import smos.bean.userlistitem import smos.exception.deletemanagerexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletremovestudentclassroom extend httpservlet protect void doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerclassroom managerclassroom = managerclassroom.getinst user loggedus = user session.getattribut loggedus verifi log tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp user user = user session.getattribut user classroom classroom = classroom session.getattribut classroom int idclassroom= classroom.getidclassroom collect userlistitem collect userlistitem manageruser.getstudentsbyclassroomid idclassroom iter userlistitem = null studentclass = = studentclass.iter itstud itstudent.hasnext userlistitem stud userlistitem stud.getid ==user.getid manageruser.removestudentclassroom user idclassroom catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.vector import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use remov teach author giulio d'amora version copyright smo /public class servletremoveteachingasteach extend httpservlet long serialversionuid = -8007609698841510837l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst managerclassroom managerclass = managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp // //i need id class teach know int idteach = int user session.getattribut user .getid user teacher = manageruser.getuserbyid idteach int idclass = integer.valueof prequest.getparamet classid string = prequest.getparametervalu unselectedteach int nteach int temp //collect teach listselcect = vector teach gotopag = int i=0 nteach = integer.valueof idteachinglist manageruser.hasteach temp managerclass.getclassroombyid idclass manageruser.removeteacheratclassroomteach idclass temp //listselcected.add managerteaching.getteachingbyid temp teachinglistteach listselcect catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerclassroom import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view report teach author giulio d'amora version copyright smo /public class servletreportteach extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect teach teachinglist = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus user = user session.getattribut user tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp //we select year int = integer.valueof prequest.getparamet managerteach managerteach managerteaching.getinst managerclassroom managerclassroom = managerclassroom.getinst //we calcul list class teacher teach base select year collect classroom classroomlist = classroomlist = managerclassroom.getclassroomsbyteacheracademicyear session.setattribut classroomlist classroomlist session.setattribut gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch mandatoryfieldexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.address import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.manageraddress import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use chang address author vecchion giusepp /public class servletshowaddressdetail extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus int addressid address address= null manageraddress manageraddress = manageraddress.getinst tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp addressid integer.valueof prequest.getparamet idaddress address = manageraddress.getaddressbyid addressid session.setattribut address address catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import smos.environ import smos.bean.address import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.manageraddress import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view address author vecchion giusepp /public class servletshowaddresslist extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string errormessage= string gotopage= ./persistentdatamanagement/addressmanagement/showaddresslist.jsp httpsession session=prequest.getsess collect address managerus manageruser= manageruser.getinst manageraddress manageraddress= manageraddress.getinst user loggedus = user session.getattribut loggedus tri return manageruser.isadministr errormessage= user access featur gotopage= ./error.jsp addresslist=manageraddress.getaddresslist addresslist addresslist gotopag return catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowclassroombyacademicyear extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect classroom classroomlist = managerus managerus = manageruser.getinst managerclassroom managerclassroom = managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access function gotopag ./error.jsp // take year session int anno = integer.valueof prequest.getparamet anno = classroomlist = managerclassroom .getclassroomsbyacademicyear anno session.setattribut classroomlist classroomlist session.setattribut anno gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept servlet show detail class author vecchion giusepp /public class servletshowclassroomdetail extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus int classroomid classroom classroom= null managerclassroom managerclassroom = managerclassroom.getinst tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp classroomid integer.valueof prequest.getparamet idclassroom classroom = managerclassroom.getclassroombyid classroomid session.setattribut classroom classroom catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowclassroomlist extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect classroom classroomlist = managerus managerus = manageruser.getinst managerclassroom managerclassroom= managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp //take year session classroomlist = managerclassroom.getclassroomsbyacademicyear integer.valueof prequest.getparamet session.setattribut classroomlist classroomlist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowclassroommanag extend httpservlet long serialversionuid = -3100959843623661377l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect classroom classroomlist = managerus managerus = manageruser.getinst managerclassroom managerclassroom= managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp //take year session classroomlist = managerclassroom.getclassroomsbyacademicyear integer.valueof prequest.getparamet session.setattribut classroomlist classroomlist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.justifi import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowjustifydetail extend httpservlet long serialversionuid = -6445257206429581384l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp managerregist managerregister.getinst int idjustifi = integer.valueof prequest.getparamet idjustifi string idclassroom = prequest.getparamet idclassroom gotopage+= idclassroom= +idclassroom justifi justify=mr.getjustifybyidjustifi idjustifi justifi justifi idclassroom idclassroom catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.abs import smos.bean.classroom import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowjustifylist extend httpservlet long serialversionuid = -6666791203700528449l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerregist managerregister= managerregister.getinst user loggedus = user session.getattribut loggedus string student =prequest.getparamet student int st = integer.parseint student classroom classroom= classroom session.getattribut classroom tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access + function gotopag ./error.jsp user st collect absenc absencelist = collect absenc st classroom.getacademicyear session.setattribut absencelist absencelist session.setattribut catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.not import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletshownotedetail extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus object managerregist managerregist = managerregister.getinst tri return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp //set thing pass session use session.setattribut string attribut prequest.getparamet user student = user session.getattribut student integer.valueof string prequest.getattribut student session.setattribut student student session.setattribut idstud student.getid session.setattribut note managerregist managerregist .getnotebyid integer.valueof prequest.getparamet gotopage= ./registermanagement/shownotedetails.jsp note note classroom session.getattribut classroom utility.string2d prequest.getparamet datenot integ session.getattribut prequest.getparamet nnote.setdescript prequest.getparamet notedescript note session.getattribut note tri managerregister.updatenot gotopage= ./shownotelist student= +session.getattribut idstud catch mandatoryfieldexcept session.setattribut error e.getmessag gotopage= ./registermanagement/shownotedetails.jsp gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.not import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshownotelist extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus object collect note managerregist managerregist = managerregister.getinst tri return manageruser.isadministr manageruser.isdirector errormessag = user access + function gotopag ./error.jsp //set thing pass session use session.setattribut string attribut int idus =integer.valueof prequest.getparamet student user student = manageruser.getuserbyid idus int year= classroom session.getattribut classroom managerregister.getnotebyiduserandacademicyear idus year session.setattribut note session.setattribut student student gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.d import java.util.gregoriancalendar import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.registerlin import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletshowregist extend httpservlet long serialversionuid = -4054623648928396283l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus managerclassroom managerclassroom = managerclassroom.getinst managerregist managerregister= managerregister.getinst collect registerlin regist = null int year month int day string date=prequest.getparamet date int idclass = integer.valueof prequest.getparamet idclassroom string datevalu datevalu = date.split year = integer.valueof datevalu month = integer.valueof datevalu day = integer.valueof datevalu tri managerregister.getregisterbyclassidandd idclass utility.string2d date loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access + function gotopag ./error.jsp //set thing pass session use session.setattribut string attribut classroom classroom= managerclassroom.getclassroombyid idclass session.setattribut regist regist session.setattribut year year session.setattribut month month session.setattribut day day session.setattribut classroom classroom //take year session presponse.sendredirect gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view teach author giulio d'amora version copyright smo /public class servletshowreport extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect vote voteslist = null managervot managervot managervotes.getinst managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = access function gotopag ./error.jsp int = integer.valueof prequest.getparamet student integ year= integ session.getattribut integ turn=integer.valueof prequest.getparamet q session.setattribut q turn = managervotes.getvotesbyuseridyearturn year turn user = user manageruser.getuserbyid studentid userlistitem st=new userlistitem st.setemail u.getemail st.setid session.setattribut std st session.setattribut voteslist voteslist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.us import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept class servletshowstudentsbyclass extend httpservlet servlet use view student class author giulio d'amora long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr manageruser.isdirector errormessag = user access function gotopag ./error.jsp int idclassroom = integer.valueof prequest .getparamet idclassroom classroom classroom = managerclassroom.getinst .getclassroombyid idclassroom collect userlistitem student = collect userlistitem managerus .getstudentsbyclassroomid idclassroom session.setattribut studentlist student session.setattribut classroom classroom catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerclassroom import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view year author giulio d'amora version copyright smo /public class servletshowteacherteachingformbyclass extend httpservlet long serialversionuid = -3988115259356084996l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect teach teachinglist = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus user session.getattribut user tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp // retriev id select class int selectedclassid = integer.valueof prequest.getparamet classid managerteach managerteach managerteaching.getinst //we calcul list cours associ class teachinglist = managerteaching.getteachingsbyclassroomid selectedclassid session.setattribut teachinglist teachinglist classroom selectedclass = managerclassroom.getinst .getclassroombyid selectedclassid selectedclass selectedclass gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use modifi teach author giulio d'amora version copyright smo /public class servletshowteachingdetail extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus int teachingid teach teach = managerteach managerteach = managerteaching.getinst tri return manageruser.isadministr errormessag = user access function gotopag ./error.jsp teachingid integer.valueof prequest.getparamet idteach teach = managerteaching.getteachingbyid teachingid session.setattribut teach teach catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept e todo auto-gener catch block e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view teach author giulio d'amora version copyright smo /public class servletshowteachinglist extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect teach teachinglist = null managerteach managerteach managerteaching.getinst managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp teachinglist managerteaching.getteach session.setattribut teachinglist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import javax.servlet.http.httpservlet class servletshowuserclassroomform extend httpservlet long serialversionuid = -8625643776134227947l 
packag import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use retriev user detail author napolitano vincenzo /public class servletshowuserdetail extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp int = integer.valueof prequest.getparamet user user = manageruser.getuserbyid session.setattribut user user catch numberformatexcept numberformatexcept errormessag = environment.default_error_messag + numberformatexception.getmessag gotopag = numberformatexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use view user author napolitano vincenzo /public class servletshowuserlist extend httpservlet long serialversionuid = -3988115259356084996l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess collect userlistitem = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error0.jsp manageruser.getuserlist session.setattribut gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use display manag form user role author napolitano vincenzo /public class servletshowuserroleform extend httpservlet long serialversionuid = -2210761175435137331l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess = = = = = = int isteach = int isadministr = int isdirector = int ispar = int isstud = int isata user user = managerus managerus = manageruser.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp = user session.getattribut user prepar valu ââto pass jsp = = manageruser.isadministr user = manageruser.isatapeopl user isdirectorboolean= manageruser.isdirector user isstudentboolean= manageruser.isstud user isparentboolean= manageruser.ispar user isteach = utility.booleantoint isdirector = utility.booleantoint isadministr = utility.booleantoint isata = utility.booleantoint isstud = utility.booleantoint ispar = utility.booleantoint gotopag = isteacher= +isteacher+ isadmin= +isadministrator+ isata= +isata + isstudent= +isstudent+ isparent= +isparent+ isdirector= +isdirector gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerclassroom import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletshowuserteachingform extend httpservlet long serialversionuid protect void doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess user user = managerus managerus = manageruser.getinst managerclassroom managerclassroom = managerclassroom.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp = user session.getattribut user errormessag l'utent non docent gotopag = ./error.jsp //int collect classroom classlist = iter classroom iteclass = classlist.iter classroom tmp = tmp.getacademicyear = classlist.remov tmp suppresswarn //collect teach teachinglistbyclassroom=nul //collect classroom teach list= vector classroom teach session.setattribut classroomlist classlist gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import javax.servlet.http.httpservlet class servletshowuserteachingformbycours extend httpservlet long serialversionuid 
packag import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.justifi import smos.bean.us import smos.exception.entitynotfoundexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletupdatejustifi extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst managerregist mr= managerregister.getinst justifi justifi = justifi session.getattribut justifi user loggedus = user session.getattribut loggedus string string session.getattribut idclassroom int id= integer.parseint idclassroom gotopage+= idclassroom= tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp integer.parseint prequest.getparamet justify.setdatejustifi utility.string2d prequest.getparamet date verifi justifi exist mr.exist justifi errormessage= la esist gotopag ./error.jsp mr.updatejustifi justifi catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.d import java.util.iter import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess import smos.environ import smos.bean.abs import smos.bean.classroom import smos.bean.delay smos.bean.registerlin import smos.bean.us import smos.bean.userlistitem import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerregist import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class servletupdateregist extend httpservlet long serialversionuid protect void doget httpservletrequest prequest httpservletrespons prespons string gotopag string errormessag httpsession session = prequest.getsess //boolean variabl use check student absenc flag = //collect use storag date collect registerlin regist = null //iter need scroll collect iter itregist = //temporari variabl need inform collect registerlin tmpregisterlin = //temporari variabl need inform collect userlistitem student = //temporari variabl need absenc absenc tmpabsenc = //temporari variabl need delay delay tmpdelay = //manag class requir process managerus managerus = manageruser.getinst managerregist managerregist = managerregister.getinst //variabl store data come request string absenc //memor absent pupil string delay = //memor laggard //retriev log session user loggedus = user session.getattribut loggedus verifi log permiss tri return manageruser.isadministr errormessag = user access function gotopag return //retriev paramet prequest date date = utility.string2d prequest.getparamet date absenc = prequest.getparametervalu absenc delay = prequest.getparametervalu delay //retriev classroom object session classroom classroom = classroom session.getattribut classroom call retriev inform db concern regist class date absenc delay regist = managerregister.getregisterbyclassidandd classroom.getidclassroom date regist = itregist = register.iter itregist = = registerlin //i pick student regist line refer student tmpregisterline.getstud //i check absenc enter student absenc = i=0 absences.length i++ integer.valueof absenc == student.getid = managerregister.hasabs tmpregisterlin tmpabsenc absenc tmpabsence.setacademicyear tmpabsence.setdateabs date tmpabsence.setidjustifi tmpabsence.setidus student.getid managerregister.insertabs tmpabsenc managerregister.hasabs tmpregisterlin managerregister.deleteabs tmpregisterline.getabs managerregister.hasabs tmpregisterlin managerregister.deleteabs tmpregisterline.getabs //i check delay enter student delay = i=0 delays.length i++ integer.valueof delay == student.getid = managerregister.hasdelay tmpregisterlin tmpdelay delay tmpdelay.setacademicyear classroom.getacademicyear tmpdelay.setdatedelay date tmpdelay.setidus student.getid tmpdelay.settimedelay prequest.getparamet hour_ managerregister.insertdelay tmpdelay tmpdelay = tmpregisterline.getdelay tmpdelay.settimedelay prequest.getparamet hour_ managerregister.updatedelay tmpdelay managerregister.hasdelay tmpregisterlin managerregister.deletedelay tmpregisterline.getdelay managerregister.hasdelay tmpregisterlin managerregister.deletedelay tmpregisterline.getdelay catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch invalidvalueexcept e errormessag = environment.default_error_messag + e.getmessag gotopag = e.printstacktrac catch mandatoryfieldexcept e errormessag = environment.default_error_messag + e.getmessag gotopag = e.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac protect dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.classroom import smos.bean.teach import smos.bean.us import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.managervot smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import java.util.collect import java.util.iter import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use student report card author giulio d'amora version copyright smo /public class servletupdatereport extend httpservlet long serialversionuid = -1045906657573424217l definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./showreport string errormessag httpsession session = prequest.getsess collect teach teachinglist = null managervot managervot managervotes.getinst managerus managerus = manageruser.getinst managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp classroom classroom = classroom session.getattribut classroom teach list teachinglist = managerteaching.getteachingsbyclassroomid classroom .getidaddress iter teach itteach = teachinglist.iter integ year integ session.getattribut userlistitem student = userlistitem session .getattribut student month turn integ session.getattribut q teach = null int idtemp string lab gotopag += + student.getid + q= turn = itteaching.next idtemp = teachingtemp.getid scritto_ = + idtemp lab + idtemp write prequest.getparamet = prequest.getparamet lab = prequest.getparamet lab vote newvot vote // if vote exist creat int idvoto = managervotes.getidvot year turn student int writeint=0 oralint=0 labint=0 = writeint = integer.valueof = oralint = integer.valueof lab = labint = integer.valueof lab idvoto = writeint || oralint = labint = year oralint newvotes.setteach turn writeint managervotes.insert newvot // vote exist updat || oralint = labint = newvot = idvoto oralint managervotes.upd newvot managervotes.getvotesbyid idvoto gotopag return catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch mandatoryfieldexcept e todo auto-gener catch block e.printstacktrac prequest.getsess errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.teach import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerteach import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use modifi teach author giulio d'amora version copyright smo /public class servletupdateteach extend httpservlet long serialversionuid definizion metodo doget param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag ./teachinglist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst teach teach teach session.getattribut teach managerteach managerteach managerteaching.getinst user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access function gotopag ./error.jsp teaching.setnam name teaching.setid teaching.getid managerteaching.exist teach managerteaching.upd teach == managerteaching.getteachingid teach managerteaching.upd teach throw duplicatedentityexcept exist teach catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.environ import smos.bean.us import smos.exception.duplicatedentityexcept import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.managerus import smos.storage.connectionmanagement.exception.connectionexcept import java.io.ioexcept import java.sql.sqlexcept import javax.servlet.http.httpservlet import import javax.servlet.http.httpservletrespons import javax.servlet.http.httpsess servlet use modifi author napolitano vincenzo /public class servletupdateus extend httpservlet long serialversionuid definit doget method param prequest param prespons protect doget httpservletrequest prequest httpservletrespons prespons string gotopag showuserlist string errormessag httpsession session = prequest.getsess managerus managerus = manageruser.getinst user user = user session.getattribut user user loggedus = user session.getattribut loggedus tri loggedus == return manageruser.isadministr errormessag = user access + function gotopag ./error.jsp prequest.getparamet firstnam prequest.getparamet lastnam cell verifi login string login = prequest.getparamet login login manageruser.existslogin user throw invalidvalueexcept login enter exist enter login prequest.getparamet password prequest.getparamet email manageruser.exist manageruser.upd user int userid = manageruser.getuserid user ==userid manageruser.upd user throw duplicatedentityexcept alreadi exist user catch sqlexcept sqlexcept errormessag = environment.default_error_messag + sqlexception.getmessag gotopag = sqlexception.printstacktrac catch connectionexcept connectionexcept errormessag = environment.default_error_messag + connectionexception.getmessag gotopag = connectionexception.printstacktrac catch entitynotfoundexcept entitynotfoundexcept errormessag = environment.default_error_messag + entitynotfoundexception.getmessag gotopag = entitynotfoundexception.printstacktrac catch mandatoryfieldexcept mandatoryfieldexcept errormessag = environment.default_error_messag + mandatoryfieldexception.getmessag gotopag = mandatoryfieldexception.printstacktrac catch invalidvalueexcept invalidvalueexcept errormessag = environment.default_error_messag + invalidvalueexception.getmessag gotopag = invalidvalueexception.printstacktrac catch duplicatedentityexcept duplicatedentityexcept errormessag = environment.default_error_messag + duplicatedentityexception.getmessag gotopag = duplicatedentityexception.printstacktrac catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac session.setattribut errormessag errormessag tri gotopag catch ioexcept ioexcept errormessag = environment.default_error_messag + ioexception.getmessag gotopag = ioexception.printstacktrac definit method param prequest param prespons protect void dopost httpservletrequest prequest httpservletrespons prespons prequest prespons 
packag import smos.exception.invalidvalueexcept import class use model teach author giulio d'amora version copyright smo /public class teach implement long serialversionuid int id_teach string name constructor class teach this.id_teach name cours return return name cours return string getnam return this.nam set name cours param pname il da settar throw invalidvalueexcept void setnam string pname throw invalidvalueexcept pname.length = // test throw invalidvalueexcept this.nam pname return teach return l'id int getid return this.id_teach set teach param pid id set .. void setid int pid this.id_teach = pid 
packag smos.storag import java.sql.sqlexcept import java.util.collect import java.util.d import java.util.gregoriancalendar import smos.bean.abs import smos.bean.delay import smos.bean.justifi import smos.bean.not import smos.bean.registerlin import smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.storage.managerregist import smos.storage.connectionmanagement.exception.connectionexcept import smos.utility.util class testregist // wrong databas id_justifi field absenc void string arg managerregist managerregister.getinst date datenow= date absenc absenc = absenc absence.setidus absence.setdateabs datenow absence.setidjustifi //absence.setidabs tri mr.getabsencebyidabs catch invalidvalueexcept e1 todo auto-gener catch block e1.printstacktrac catch entitynotfoundexcept e1 todo auto-gener catch block e1.printstacktrac catch connectionexcept e1 todo auto-gener catch block e1.printstacktrac catch sqlexcept e1 todo auto-gener catch block e1.printstacktrac justifi justifi justifynew.setidus justifynew.setdatejustifi datenow justifynew.setacademicyear justifynew.setidjustifi delay delay = delay //delay.setiddelay delay.setidus delay.setdatedelay datenow delay.settimedelay note note notenew.setidus boh notenew.setdatenot notenew.setdescript sleep classroom tri absenc //if mr.exist absenc system.out.println exist //mr.deleteabs absenc //mr.updateabs absenc mr.insertdelay delay //if mr.exist delay system.out.println exist //mr.updatedelay delay //mr.deletedelay delay //mr.insertnot //mr.deletenot //mr.insertjustifi absenc //mr.deletejustifi justifynew.getidjustifi //if mr.hasjustifi absenc system.out.println //absence= mr.getabsencebyiduserandd //absence= mr.getabsencebyidjustifi absence.getdateabs //collect absenc ac= absenc x ac system.out.println x.getdateabs //justifynew=mr.getjustifybyabs absenc //system.out.println justifynew.getdatejustifi //collect note nc = note x system.out.println x.getdescript //delay= mr.getdelaybyiduserandd datenow //system.out.println delay.getdatedelay //system.out.println delay.gettimedelay /// collect registerlin crl = mr.getregisterbyclassidandd registerlin x crl system.out.println x.getstud .getnam mr.hasabs x system.out.println absent system.out.println mr.hasabs x mr.hasdelay x system.out.println delay // gregoriancalendar gc = gregoriancalendar string date= int year=gc.get gregoriancalendar.year int month=gc.get gregoriancalendar.month +1 string months= month months= +month months+month int day=gc.get gregoriancalendar.day_of_month string days= day days= +day days= days+day date= date + year+ +months+ +day system.out.println date catch except e system.out.println error system.out.println e.getmessag system.out.println datenow.tostr system.out.println utility.isnul datenow system.out.println test complet 
packag import smos.exception.invalidvalueexcept import class use model class user implement long serialversionuid int id string login string password string firstnam string lastnam int idpar string cell string email constructor class user this.id = return return user string getlogin return this.login set user login param plogin login set throw invalidvalueexcept void setlogin string plogin throw invalidvalueexcept plogin.length =4 throw invalidvalueexcept this.login plogin return return user name string getnam return this.lastnam + this.firstnam return return user name string getfirstnam return this.firstnam set user name param pfirstnam name set void setfirstnam string pfirstnam = pfirstnam return return user string getpassword return this.password set user password param password set throw invalidvalueexcept void setpassword string ppassword throw invalidvalueexcept ppassword.length =4 throw invalidvalueexcept this.password = ppassword return return user string getlastnam return this.lastnam set user name param surnam set void setlastnam string plastnam = plastnam return return user int getid return this.id set user id param pid id set void setid int pid = pid return string contain user name see tostr string tostr return this.getfirstnam + this.getlastnam return string getemail return this.email param email set void setemail string pmail = pmail return cell string getcel return this.cel param cell cell set void setcel string pcell this.cel = pcell return int getidpar return this.idpar idpar set setidpar int pidpar = pidpar 
packag import class use model core inform class userlistitem implement long serialversionuid string name string email int id return return user int getid return this.id set user id param pid id set void setid int pid = pid return return user name string getnam return this.nam set user name param pname name set void setnam string pname = pname return string getemail return this.email mail email set void setemail string pmail = pmail 
packag smos.storag import java.sql.sqlexcept import java.util.collect import smos.bean.address import smos.bean.teach import smos.bean.userlistitem import smos.bean.vot smos.exception.entitynotfoundexcept import smos.exception.invalidvalueexcept import smos.exception.mandatoryfieldexcept import smos.storage.connectionmanagement.exception.connectionexcept class usertest arg throw invalidvalueexcept throw connectionexcept throw entitynotfoundexcept throw sqlexcept throw mandatoryfieldexcept void string arg throw sqlexcept entitynotfoundexcept connectionexcept invalidvalueexcept mandatoryfieldexcept userlistitem temp userlistitem temp.setid teach teach teach teaching.setid managervot = managervotes.getinst vote ghh = vote ghh.setid_us ghh.setlaboratori ghh.setteach ghh.setturn mv.insert ghh 
packag smos.util import smos.exception.entitynotfoundexcept import smos.storage.connectionmanagement.dbconnect import smos.storage.connectionmanagement.exception.connectionexcept import java.util.calendar import java.util.d import java.util.gregoriancalendar import java.util.timezon import java.sql import java.text.dateformat class contain set system manag util /public class util constant char slash = char charact ascii char backslash = char charact ascii string day = monday tuesday wednesday thursday friday saturday string validhour = string month = jan feb mar apr may jun jul aug sep oct nov dec string requestst = carri reject accept elimin //variabl tomcat start //variabl program string imageheaderpath = string imageheaderlogopath = string imageleftcolumn = string textfoot = //smtp server send string serversmtp = smtp.tele2.it day exam cancel reserv int needdaybeforeexam = day exam reserv int maxdaybeforeexam = path storag path pdf file string pdfpath = // path file storag path import data string uploadpath = //variabl connect databas string drivermysql = com.mysql.jdbc.driv string fullpathdatabas = jdbc mysql //localhost:3306/smo string usernam = root string password = int maxpools int waittimeout int int pooltimeout = return given field tabl valu field pfield field want retriev valu param search requir inform return return maximum valu pfield field pass tabl pass paramet throw entitynotfoundexcept throw connectionexcept throw sqlexcept synchron int getmaxvalu string pfield string throw entitynotfoundexcept connectionexcept sqlexcept int valu = connect connect = tri field tabl provid return error code pfield.equ throw entitynotfoundexcept ptable.equ throw entitynotfoundexcept prepar string retriev inform request string tsql select max pfield + new_field from + // get connect databas connect = dbconnection.getconnect connect == throw connectionexcept // send databas resultset tr = utility.queryoper connect tsql valu = trs.getint throw entitynotfoundexcept return valu dbconnection.releaseconnect connect convert date format string databas param pdate date convert return return format date databas string date2sqlstr java.util.d pdate boolean phour timezon tz = timezone.getdefault calendar calendar = calendar.getinst tz calendar.settim pdate int year = calendar.get calendar.year int month = calendar.get calendar.month + int day = calendar.get calendar.d string result year + month day int hour = calendar.get calendar.hour_of_day int min = calendar.get calendar.minut int sec = calendar.get calendar.second phour result = result + + hour + min + sec return result check string pass paramet null param pstr string check return code /code string otherwis string pass replac /code method see replac string isnul string pstr string ttmp pstr == null ttmp pstr = replaceallstr \\ pstr = replaceallstr pstr ttmp + pstr return check given integ param data check return return data string data string string isnul integ pint string tintstr == null tintstr tintstr pint.tostr return tintstr check date null param pdate date check return return string repres date pass input format databas string isnul java.util.d pdate return date2sqlstr pdate + string string pstring start = int start2 = end = int end2 = string result = string result2 end = end = end = result= result +pstring.substr end result = result + \\ start = end+1 result = result + pstring.substr start end2 end2 = result.indexof start2 end2 result2= result2 +result.substr result2 = result2 + = end2+1 = result2 + result.substr start2 return result2 convert string integ param pstr string convert return integ contain string code /code convers integ string2integ string pstr integ tinteg pstr == null || pstr.compareto == tinteg integ tri tinteg = integer.decod pstr catch except e tinteg = integ return tinteg replac charact \ string pass param pstr string transform return string string replac string pstr string tri tri = pstr.replaceal tri = tris.replaceal \\ return tri replac string string pass param pstr string transform return string string replacequot string pstr string tri tri = pstr.replaceal return tri perform databas oper use sql string param pconnect connect databas param psql sql string return number record involv oper throw sqlexcept int executeoper connect pconnect string psql throw sqlexcept statement = int tresult = stmt.executeupd psql return tresult execut queri databas param pconnect connect databas param psql sql string return number record involv oper throw sqlexcept resultset queryoper connect pconnect string psql throw sqlexcept statement = return stmt.executequeri psql convert boolean data integ param pbol boolean valu convert integ return integ valu correspond boolean valu pass int booleantoint boolean pbol == return return convert given boolean param pint integ valu boolean return valu correspond valu pass inttoboolean int pint return return return date return date java.util.d today calendar calendar = calendar.getinst java.util.d creationd = calendar.gettim return creationd // java.util.d creationd = java.util.d // timestamp timestamp = timestamp creationdate.gettim // return java.util.d timestamp return date contain input string pdate string pars date return date java.util.d string2dat string pdate tri dateformat dfdate = dateformat.getdateinst java.util.d tdate = dfdate.pars pdate java.text.parseposit java.sql.timestamp timestamp = java.sql.timestamp tdate .gettim return java.util.d timestamp catch except e tri dateformat dfdate = dateformat.getdateinst dateformat.short java.util.locale.itali java.util.d tdate = dfdate.pars pdate java.text.parseposit java.sql.timestamp timestamp = java.sql.timestamp tdate .gettim return java.util.d timestamp catch except e2 return null return input date string format param pdate date convert return date string date2str java.util.d pdate boolean phour tri dateformat dfdate = dateformat.getdateinst dateformat.short dateformat dftime = dateformat.gettimeinst dateformat.short phour return dfdate.format pdate + dftime.format pdate dfdate.format pdate catch except e return param searchfor param replacewith return string correspond string replaceal string sourcestr string string replacewith stringbuff searchbuff stringbuff sourcestr int hit searchbuffer.tostr .touppercas .indexof searchfor.touppercas hit int newindex = searchbuffer.tostr .touppercas .indexof searchfor.touppercas hit searchbuffer.replac newindex newindex + searchfor.length replacewith hits++ return searchbuffer.tostr function loop replac \ // use variabl consum occurr // pattern param sourcestr param searchfor param replacewith return newstringbuff string replaceallstr string sourcestr string string replacewith stringbuff searchbuff stringbuff sourcestr stringbuff newstringbuff = stringbuff searchbuffer.tostr .touppercas .indexof searchfor.touppercas = int newindex = searchbuffer.tostr .touppercas .indexof searchfor.touppercas searchbuffer.substr newindex newstringbuffer.append replacewith searchbuff stringbuff searchbuffer.substr newindex + searchfor.length searchbuffer.length newstringbuffer.append return newstringbuffer.tostr param param removestr void removeal string sourcestr string removestr nextoccur sourcestr.tostr .touppercas .indexof removestr.touppercas = nextoccur = sourcestr.tostr .touppercas .indexof removestr.touppercas sourcestr = sourcestr.substr nextoccur + sourcestr.substr nextoccur + removestr.length sourcestr.length calcul distanc day date suppresswarn deprec int daysbetween date today date reservationd int daysbetween = int millisecinaday = gregoriancalendar firstdat = gregoriancalendar gregoriancalendar secondd = gregoriancalendar firstdate.set today.getyear +1900 today.getmonth today.getd seconddate.set reservationdate.getmonth reservationdate.getd millisecbetween = seconddate.gettimeinmilli firstdate.gettimeinmilli = int millisecbetween/millisecinaday return return path set suppresswarn string getpdfpath return utility.pdfpath param path set void setpdfpath string ppdfpath utility.pdfpath = ppdfpath return path set file use import data suppresswarn string getuploadpath return utility.uploadpath param path set file use import data void setuploadpath string puploadpath utility.uploadpath = puploadpath return smtp server use send autom suppresswarn string getserversmtp return utility.serversmtp param smtp server set void setserversmtp string pserversmtp utility.serversmtp = pserversmtp return int getactivetimeout return param activetimeout set void setactivetimeout int = pactivetimeout return string getdrivermysql return utility.drivermysql param drivermysql set void setdrivermysql string pdrivermysql utility.drivermysql = pdrivermysql return string getfullpathdatabas return utility.fullpathdatabas fullpathdatabas set void setfullpathdatabas string pfullpathdatabas utility.fullpathdatabas = pfullpathdatabas return int getmaxpools return utility.maxpools param maxpools set void setmaxpools int pmaxpools utility.maxpools = pmaxpools return string getpassword return utility.password param password password set void setpassword string ppassword utility.password = ppassword return int getpooltimeout return param pooltimeout pooltimeout set void setpooltimeout int = ppooltimeout return string getusernam return utility.usernam param set void setusernam string pusernam utility.usernam = pusernam return int getwaittimeout return param waittimeout set void setwaittimeout int = pwaittimeout return string getimageheaderpath return utility.imageheaderpath param imageheaderpath set void setimageheaderpath string pimageheaderpath utility.imageheaderpath = pimageheaderpath return string gettextfoot return utility.textfoot param textfoot set void settextfoot string ptextfoot utility.textfoot = ptextfoot return string getimageleftcolumn return utility.imageleftcolumn param imageleftcolumn set void setimageleftcolumn string pimageleftcolumn utility.imageleftcolumn = pimageleftcolumn string getimagelogoheaderpath return utility.imageheaderlogopath void setimagelogoheaderpath string pimageheaderlogopath utility.imageheaderlogopath = pimageheaderlogopath return int getneeddaybeforeexam return utility.needdaybeforeexam param set void setneeddaybeforeexam int pneeddaybeforeexam utility.needdaybeforeexam = pneeddaybeforeexam return int getmaxdaybeforeexam return utility.maxdaybeforeexam param maxdaybeforeexam set void setmaxdaybeforeexam int pmaxdaybeforeexam utility.maxdaybeforeexam = pmaxdaybeforeexam string getactuald gregoriancalendar gc = gregoriancalendar string date= int year=gc.get gregoriancalendar.year int month=gc.get gregoriancalendar.month +1 string months= month months= +month months+month int day=gc.get gregoriancalendar.day_of_month string days= day days= +day days= days+day date= date + days+ +months+ return date 
packag import import smos.exception.invalidvalueexcept class use model grade author luigi colangelo version copyright smo /public class vote implement class use model long serialversionuid int id_vot int id_us int teach int written int laboratori int int turn constructor class vote id_votes=0 method return vote return vote int getid_vot return id_vot method set vote param pid_vot id set void setid_vot int pid_vot this.id_vot = pid_vot method return id vote return user int getid_us return id_us method set user id vote pid_us id set setid_us int pid_us this.id_us = pid_us method return code teach vote return teach int getteach return teach method set teach code relat param pteach teach void setteach int pteach this.teach = pteach method return grade write return vote write int getwritten return written method set grade write check param void setwritten pwritten throw invalidvalueexcept pwritten || pwritten invalidvalueexcept this.written pwritten method return grade return vote int return method set grade check vote set int throw invalidvalueexcept invalidvalueexcept = poral method return laboratori return lab grade int getlaboratori return laboratori method set grade check param plaboratori vote laboratori set setlaboratori int plaboratori throw invalidvalueexcept plaboratori || plaboratori invalidvalueexcept this.laboratori = plaboratori method return year grade return year int return set year grade void int paccademicyear = paccademicyear method return quarter vote return semest vote int getturn return turn method set quarter vote pturn semest vote set void setturn int pturn this.turn = pturn string tostr return voto= id id insegnamento= scritto= laboratorio= anno quadrimestre= +turn 
